{"version":3,"sources":["_helpers.js","_chumly-alert.js","_chumly-commenting.js","_chumly-form.js","_chumly-group.js","_chumly-members.js","_chumly-message-center.js","_chumly-misc.js","_chumly-modal.js","_chumly-notifications.js","_chumly-post-feed.js","_chumly-profile.js","_chumly-prompt.js","_chumly-save-post.js","_chumly-scroll-off.js","_chumly-scroll-to.js","_chumly-search.js","_chumly-tabs.js","_chumly-toggle.js","_chumly-upload-status.js","_chumly-upload.js","chumly.js"],"names":[],"mappingshTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACljGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvjQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtxhnOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvtpjdfile":"chumly.js","sourcesContent":["(function($) {\r\n\t\r\n\t/*------------------------------------*\\\r\n\t    ANY\r\n\t    \r\n\t    This will return true if there are any items \r\n\t    in a jQuery collection. \r\n\t    \r\n\t    EXAMPLE\r\n\t    \r\n\t    var items = $(\".item\");\r\n\t    \r\n\t    if(items.any()) {\r\n\t\t\tconsole.log(\"YAY!\");\r\n\t\t}\r\n\t\\*------------------------------------*/\r\n\t\r\n\t$.fn.any = function() {\r\n\t\treturn $(this).length > 0;\r\n\t};\r\n\r\n\r\n    /*------------------------------------*\\\r\n        PARSE SETTINGS\r\n        \r\n        This will try and parse inline json settings as an object literal to pass into a plugin\r\n        \r\n        EXAMPLE\r\n        \r\n        <div class=\"item\" data-settings='{\"setting1\": true}'></div>\r\n\r\n        var item = $(\".item\"),\r\n            settings = item.parseSettings();\r\n        \r\n        console.log(settings.setting1);\r\n        \r\n        returns true;\r\n\r\n    \\*------------------------------------*/\r\n    $.fn.parseSettings = function () {\r\n\r\n        var elem = $(this),\r\n            response = {};\r\n\r\n        if (elem.attr(\"data-settings\")) {\r\n\r\n            try {\r\n                response = $.parseJSON(elem.attr(\"data-settings\"));\r\n            }\r\n            catch (ex) {\r\n                console.log(\"Check input data. Message: \" + ex.message);\r\n                return {};\r\n            }\r\n        }\r\n\r\n        return response;\r\n    };\r\n    \r\n\r\n    /*------------------------------------*\\\r\n        AJAX REQUEST\r\n        \r\n        A nice Ajax wrapper method\r\n        \r\n        EXAMPLE\r\n        \r\n        $.ajaxRequest({\r\n            url: \"/test\",\r\n            callback(function(data, isSuccess) {\r\n                \r\n                if(isSuccess) {\r\n                    alert('All the data is WINNING');\r\n                }\r\n            });\r\n        });\r\n\r\n    \\*------------------------------------*/\r\n\t$.extend({\r\n\t\tajaxRequest: function(options) {\r\n\t\t\t\r\n\t\t\tvar settings = {\r\n                dataType: \"application/json\",\r\n                url: \"/\",\r\n                data: {},\r\n                method: \"GET\",\r\n                callback: null\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar init = function() {\r\n\t\t\t\t\r\n\t\t\t\tsettings = $.extend(true, {}, settings, options);\r\n\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\tcontentType: settings.dataType, \r\n\t\t\t\t\turl: settings.url,\r\n\t\t\t\t\tdata: settings.data,\r\n\t\t\t\t\ttype: settings.method,\r\n\t\t\t\t\tsuccess: function(responseData) {\r\n\t\t\t\t\t\ttryCallback(responseData);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(responseData) {\r\n\t\t\t\t\t\ttryCallback(responseData);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\ttryCallback = function(responseData) {\r\n\t\t\t\t\r\n\t\t\t\tif(typeof(settings.callback) == \"function\") {\r\n\t\t\t\t\tsettings.callback(responseData, (responseData != null ? (responseData.status == 200 ? false : true) : true));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinit();\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n\r\n    /*------------------------------------*\\\r\n        AJAX HTML\r\n\r\n        A wrapper to ajaxRequest for simple HTML getting\r\n\r\n        EXAMPLE\r\n\r\n        $.ajaxHtml('http://google.com', function(data) {\r\n\t\t\t// do stuff\r\n\t\t});\r\n\r\n    \\*------------------------------------*/\r\n\t$.extend({\r\n\t\tajaxHtml: function(url, callback) {\r\n\t\t\t$.ajaxRequest({\r\n\t\t\t\tdataType: \"text/html\",\r\n\t\t\t\turl: url,\r\n\t\t\t\tcallback: callback\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\r\n    /*------------------------------------*\\\r\n        QUERY STRING\r\n\r\n        A helper to work with query strings\r\n\r\n        toJson: take the current query string and return it as json\r\n        fromJson: takes a json object and converts into a query string\r\n\r\n    \\*------------------------------------*/\r\n    $.extend({\r\n    \tqueryString: {\r\n\r\n    \t\ttoJson: function(ignoreKeys) {\r\n\t\t\t\tvar response = {},\r\n\t\t\t\t\tdata = window.location.href.toString().toLowerCase(),\r\n\t\t\t\t\tsplitData = [];\r\n\r\n\t\t\t\t// Return empty object if undefined\r\n\t\t\t\tif(typeof(data) == 'undefined') {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return empty object if empty\r\n\t\t\t\tif(data.length == 0) {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set empty array if ignore keys not set\r\n\t\t\t\tif(typeof(ignoreKeys) == 'undefined') {\r\n\t\t\t\t\tignoreKeys = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Split query string into array\r\n\t\t\t\tsplitData = data.split('?')[1].split('&');\r\n\r\n\t\t\t\t// Loop and create key value pairs\r\n\t\t\t\tfor (var i = 0, l = splitData.length; i < l; i++) {\r\n\t\t\t\t    var param = splitData[i].split('=');\r\n\t\t\t\t    response[param[0]] = param[1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check ignore keys length\r\n\t\t\t\tif(ignoreKeys.length > 0) {\r\n\r\n\t\t\t\t\t// Loop each one and delete if exists\r\n\t\t\t\t\t$.each(ignoreKeys, function(i, val) {\r\n\r\n\t\t\t\t\t\tif(response.hasOwnProperty(val)) {\r\n\t\t\t\t\t\t\tdelete response[val];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn response;\r\n    \t\t},\r\n\r\n    \t\tfromJson: function(data) {\r\n    \t\t\treturn '?' + $.param(data).replace('?', '&');\r\n    \t\t}\r\n    \t}\r\n    });\r\n\t\r\n\t\r\n    /*------------------------------------*\\\r\n        ESC\r\n        \r\n        A useful little wrapper for the escape key press event\r\n        \r\n        EXAMPLE\r\n        \r\n\t\t$.esc({\r\n\t\t\tcallback: function(evt) {\r\n\t\t\t\t\r\n\t\t\t\t// Close your modal or whatever. Accessibility FTW\r\n\t\t\t}\r\n\t\t});\r\n\r\n    \\*------------------------------------*/\r\n\t$.extend({\r\n\t\tesc: function(options) {\r\n\t\t\t\r\n\t\t\tvar settings = {\r\n\t\t\t\tcallback: null\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsettings = $.extend(true, {}, settings, options);\r\n\t\t\t\r\n\t\t\tif(typeof(settings.callback) == 'function') {\r\n\t\t\t\t\r\n\t\t\t\t$(document).keyup(function(evt) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// escape key maps to keycode `27`\r\n\t\t\t\t\tif (evt.keyCode == 27) { \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// run callback and pass the event over\r\n\t\t\t\t\t\tsettings.callback(evt);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\t\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t});\r\n\r\n\t/*------------------------------------*\\\r\n        GET BREAKPOINT\r\n\r\n\t\tReturns the current CSS breakpoint as defined in global.scss\r\n\t\\*------------------------------------*/\r\n\t$.extend({\r\n\t\tgetBreakpoint: function() {\r\n\t\t\treturn window.getComputedStyle(document.querySelector('body'), ':before').getPropertyValue('content').replace(/\\\"/g, '');\r\n\t\t}\r\n\t});\r\n\r\n    /*------------------------------------*\\\r\n        CHANGE EVENT\r\n\r\n        A helper to return the correct 'change' event for an element\r\n\r\n        EXAMPLE\r\n\r\n        var event = $('.item').changeEvent();\r\n\r\n    \\*------------------------------------*/\r\n    $.fn.changeEvent = function() {\r\n\r\n    \tvar elem = $(this),\r\n    \t\tresponse = 'change';\r\n\r\n\t\t\t// Work out what the change event will be, based on input type\r\n\t\t\tswitch(elem.prop('tagName').toString().toLowerCase()) {\r\n\t\t\t\tcase 'input':\r\n\r\n\t\t\t\t\tif(elem.attr('type') != 'checkbox' && elem.attr('type') != 'radio') {\r\n\t\t\t\t\t\tresponse = 'input';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\treturn response;\r\n    };\r\n}(jQuery));\r\n\r\n// TAKEN FROM David Walsh blog - http://davidwalsh.name/javascript-debounce-function\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nfunction debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this, args = arguments;\r\n\t\tvar later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tvar callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n};","(function ($) {\r\n\r\n\t$.fn.chumlyAlert = function (childElem) {\r\n\t\tconsole.log('Alert');\r\n\t\t\r\n\t\tscrollOff();\r\n\t\t\r\n\t\tif(!childElem){\r\n\t\t\tchildElem = false;\r\n\t\t}\r\n\r\n\t\tvar elem        = $(this),\r\n\t\t    alertElem   = $(),\r\n\t\t    closeButton = elem.find('.chumly-alert__close'),\r\n\t\t    showButton  = elem.find('.chumly-alert__show'),\r\n\t\t    settings    = {\r\n\t\t\t    activeClass:      'is-active',\r\n\t\t\t    destroyOnClose:   true,\r\n\t\t\t    isAlertChildElem: childElem,\r\n\t\t\t    hideTimeout:      600\r\n\t\t    };\r\n\t\tconsole.log(elem);\r\n\t\tvar init   = function () {\r\n\r\n\t\t\t    settings = $.extend(true, {}, settings, elem.parseSettings());\r\n\r\n\t\t\t    // Load alert elem based on setting\r\n\t\t\t    if (settings.isAlertChildElem) {\r\n\t\t\t\t    alertElem = elem.find('.chumly-alert__elem');\r\n\t\t\t    } else {\r\n\t\t\t\t    alertElem = elem;\r\n\t\t\t    }\r\n\r\n\t\t\t    // If there's a close button, add a listener\r\n\t\t\t    if (closeButton.any()) {\r\n\r\n\t\t\t\t    closeButton.on('click', function (evt) {\r\n\t\t\t\t\t    evt.preventDefault();\r\n\t\t\t\t\t\tconsole.log('Close Alert');\r\n\t\t\t\t\t    console.log(alertElem);\r\n\t\t\t\t\t    toggle('close');\r\n\r\n\t\t\t\t\t\tscrollOn();\r\n\r\n\t\t\t\t    });\r\n\t\t\t    }\r\n\r\n\t\t\t    // The same for show button\r\n\t\t\t    if (showButton.any()) {\r\n\r\n\t\t\t\t    showButton.on('click', function (evt) {\r\n\r\n\t\t\t\t\t    evt.preventDefault();\r\n\r\n\t\t\t\t\t    toggle('show');\r\n\t\t\t\t    });\r\n\t\t\t    }\r\n\r\n\t\t    },\r\n\r\n\t\t    // Hide or show alert element\r\n\t\t    toggle = function (command) {\r\n\r\n\t\t\t    switch (command) {\r\n\t\t\t\t    case 'close':\r\n\t\t\t\t    case 'hide':\r\n\t\t\t\t    default:\r\n\r\n\t\t\t\t    \t$(document).chumlyModal('close');\r\n\r\n\t\t\t\t\t    alertElem.removeClass(settings.activeClass);\r\n\t\t\t\t\t    \r\n\t\t\t\t\t\talertElem.removeClass(settings.activeClass);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t    // If required, wait a second then remove element\r\n\t\t\t\t\t    setTimeout(function () {\r\n\r\n\t\t\t\t\t\t    if (settings.destroyOnClose) {\r\n\t\t\t\t\t\t\t    alertElem.remove();\r\n\t\t\t\t\t\t    } else {\r\n\t\t\t\t\t\t\t    alertElem.css('visibility', 'hidden');\r\n\t\t\t\t\t\t    }\r\n\r\n\t\t\t\t\t    }, settings.hideTimeout);\r\n\r\n\t\t\t\t\t    break;\r\n\r\n\t\t\t\t    case 'show':\r\n\t\t\t\t\t\talertElem.css('visibility', 'visible').addClass(settings.activeClass);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t    break;\r\n\t\t\t    }\r\n\t\t    };\r\n\r\n\t\tinit();\r\n\t\treturn this;\r\n\t};\r\n\r\n}($));","/**\r\n * Created by matthew on 6/2/18.\r\n */\r\n\r\n/**\r\n * When comment Reply button is clicked, focus the reply textarea\r\n */\r\n$('.comments').on('click', '.chumly-toggle__trigger', function () {\r\n\r\n    $(this).parent().find('textarea').focus();\r\n    \r\n});\r\n\r\n\r\n/**\r\n * Focus & scroll to comment textara when Comment interaction button is clicked\r\n */\r\n$('[data-interaction_action=\"comment\"]').on('click', function (event) {\r\n    console.log('Test 1');\r\n    var post_id = $(this).data('post_id'),\r\n        elem    = $('[data-comment_thread=\"' + post_id + '\"]');\r\n\r\n    elem.chumlyScrollTo(function () {\r\n        elem.parents('.news-feed__item').find('.news-feed__item__comment-form textarea').focus();\r\n    });\r\n\r\n});\r\n\r\n\r\n/**\r\n * Trigger save mechanism for comments\r\n */\r\n$.fn.chumlyCommentFormTriggers = function () {\r\n\r\n    var elem = $(this);\r\n\r\n    elem.on('keydown', 'textarea', function (event) {\r\n\r\n        if (event.keyCode == 13 && !event.shiftKey) {\r\n    \r\n            chumlyTriggerCommentSave($(this));\r\n\r\n        }\r\n        \r\n    });\r\n    \r\n    elem.find('button').on('click', function(event){\r\n       \r\n        event.preventDefault();\r\n    \r\n        chumlyTriggerCommentSave(elem.find('textarea'));\r\n        \r\n    });\r\n\r\n};\r\n\r\n\r\n/**\r\n * Save a comment\r\n *\r\n * @param elem Textarea containing comment content\r\n */\r\nfunction chumlyTriggerCommentSave(elem) {\r\n\r\n    console.log('Test');\r\n    event.preventDefault();\r\n\r\n    if (elem.val().length > 0) {\r\n\r\n        var comment      = elem.val(),\r\n            post_id      = elem.data('post_id'),\r\n            username     = elem.data('username'),\r\n            user_id      = elem.data('user_id'),\r\n            reply_parent = elem.parents('.comments__form--reply').data('reply_parent');\r\n\r\n        console.log('Reply Parent:', reply_parent);\r\n        console.log('Original Post:', post_id);\r\n        console.log('Username:', username);\r\n        console.log('User ID:', user_id);\r\n\r\n\r\n        elem.val('');\r\n\r\n        $.ajax({\r\n            url: chumly_vars.ajax_url,\r\n            method: 'POST',\r\n            data: {\r\n                'action': 'chumly_trigger_save_comment',\r\n                'comment_content': comment,\r\n                'post_id': post_id,\r\n                'user_id': user_id,\r\n                'comment_author': username,\r\n                'comment_parent': reply_parent\r\n            },\r\n            success: function (data) {\r\n                console.log('Comment Parent:', reply_parent);\r\n                //console.log('Comment Saved Confirmation:', data);\r\n                if (reply_parent) {\r\n\r\n                    console.log('Nested Comment');\r\n\r\n                    var elem = $('#nested_comments_' + reply_parent);\r\n                    elem.append(data).chumlyScrollTo();\r\n                    \r\n                } else {\r\n                    console.log('New Comment', post_id);\r\n                    var elem = $('.new_comment_anchor[data-comment_thread=\"' + post_id + '\"]');\r\n                    elem.before(data).chumlyScrollTo();\r\n\r\n                }\r\n\r\n                $('.comments__item__inner').chumlyToggle().chumlyCommentFormTriggers();\r\n                autosize($('textarea'));\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * Created by matthew on 31/5/18.\r\n */\r\n$('.chumly form').validate({\r\n    errorClass: 'is-error'\r\n});\r\n\r\n\r\n$('input[type=\"submit\"]').on('click', function (event) {\r\n\r\n    var form = $(this).parents('form');\r\n\r\n    if (!form.valid()) {\r\n\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n});\r\n\r\n\r\n$('#new_form_row').on('click', function (event) {\r\n\r\n    event.preventDefault();\r\n\r\n    var trigger = $(this),\r\n        count = parseInt(trigger.data('count')) + 1,\r\n        lastRow = trigger.parents('.button-group').prev(),\r\n        newRow = lastRow.clone(),\r\n        newInputs = newRow.find('input');\r\n\r\n    lastRow.after(newRow);\r\n\r\n    newRow.hide().fadeIn(150);\r\n\r\n    if (count == 1) {\r\n        newRow.append('<button class=\"button button--negative button--small delete_form_row\"><i class=\"fa fa-minus-circle\"></i></button>');\r\n    }\r\n\r\n    $.each(newInputs, function (key, element) {\r\n\r\n        var input = $(element),\r\n            inputName = input.attr('name').replace(/\\[\\d*]/g, '[' + count + ']');\r\n\r\n        input.attr('name', inputName);\r\n        input.val('');\r\n\r\n    });\r\n\r\n    trigger.data('count', count);\r\n\r\n});\r\n\r\n\r\n$('input[type=\"radio\"]').on('click', function () {\r\n\r\n    $(this).parents('.form__group').find('input[type=\"radio\"]').removeClass('active').parent('label').removeClass('button--primary');\r\n    $(this).addClass('active').parent('label').addClass('button--primary');\r\n\r\n});\r\n\r\n\r\n$('input[type=\"file\"]').on('change', function () {\r\n\r\n    var filepath = $(this).val(),\r\n        filename = filepath.substring(filepath.lastIndexOf('\\\\') + 1)\r\n\r\n    $(this).prev().html(filename);\r\n\r\n    console.log(filename);\r\n});\r\n\r\n\r\n$('input.datepicker').on('click', function () {\r\n\r\n    $('.ui-datepicker').css('z-index', '10000');\r\n\r\n});\r\n\r\n\r\n$('body').on('click', '.delete_form_row', function (event) {\r\n\r\n    event.preventDefault();\r\n\r\n    var addTrigger = $('#new_form_row'),\r\n        count = parseInt(addTrigger.data('count') - 1);\r\n\r\n    console.log(count);\r\n\r\n    $(this).parents('.form__group__inline').fadeOut(150, function () {\r\n        $(this).remove();\r\n    });\r\n\r\n    addTrigger.data('count', count);\r\n\r\n});\r\n\r\n$('.datepicker').datepicker();","/**\r\n * Created by matthew on 15/1/18.\r\n */\r\n$('.update_group').on('click', function (e) {\r\n\t\r\n\te.preventDefault();\r\n\t\r\n\tconsole.log('Saving Group');\r\n\t\r\n\tvar trigger   = $(this),\r\n\t    form      = trigger.parents('form'),\r\n\t    group_id  = form.find('input[name=\"group_id\"]').val(),\r\n\t    form_data = new FormData(form[0]);\r\n\r\n\tif (form.valid()) {\r\n\t\t\r\n\r\n\t\ttrigger.val('Updating...').attr('disabled', 'disabled');\r\n\t\t$('.upload__meter').css('visibility', 'visible');\r\n\t\tform_data.append('action', 'chumly_save_group');\r\n\t\tform_data.append('group_id', group_id);\r\n\t\t\r\n\t\t$.ajax({\r\n\t\t\turl:         chumly_vars.ajax_url,\r\n\t\t\ttype:        'POST',\r\n\t\t\tprocessData: false,\r\n\t\t\tcontentType: false,\r\n\t\t\tcache:       false,\r\n\t\t\tdataType: 'json',\r\n\t\t\tdata:        form_data,\r\n\t\t\tsuccess:     function (data) {\r\n\r\n\t\t\t\t$('#saved_response').html(data);\r\n\r\n\t\t\t\tconsole.log('Group save data:', data);\r\n\t\t\t\tconsole.log('Group save linked ID:', data.linked_post_id);\r\n\r\n\t\t\t\t\r\n\t\t\t\tchumlyUploadFiles(form, data.linked_post_id, 'group', null, function () {\r\n\t\t\t\t\t\r\n\t\t\t\t\t//\t$('#ajax_response').empty().append(data);\r\n\t\t\t\t\ttrigger.val('Update Group').removeAttr('disabled');\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t} else {\r\n\t\t\r\n\t\tconsole.log('Invalid form');\r\n\t\t\r\n\t}\r\n\t\r\n});\r\n\r\n\r\n$('#delete_group').on('click', function (e) {\r\n\t\r\n\te.preventDefault();\r\n\t\r\n\tvar trigger  = $(this),\r\n\t    group_id = trigger.data('group_id');\r\n\t\t\r\n\t$.ajax({\r\n\t\turl:      chumly_vars.ajax_url,\r\n\t\ttype:     'POST',\r\n\t\tdataType: 'json',\r\n\t\tdata:     {\r\n\t\t\t'action':   'chumly_delete_group',\r\n\t\t\t'group_id': group_id\r\n\t\t},\r\n\t\tsuccess:  function (data) {\r\n\t\t\t\t\t\t\r\n\t\t\tif (data === 1) {\r\n\t\t\t\t\r\n\t\t\t\tchumlyAlertModal(trigger, 'success', 'Group deleted successfully', function(){\r\n\t\t\t\t\twindow.location.replace('/newsfeed');\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tchumlyAlertModal(trigger, 'error', 'There was an error deleting the group.<br>Please try again or contact support.');\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t})\r\n\t\r\n});\r\n\r\n\r\n/**\r\n * Delete a user from a group\r\n */\r\n$('.delete_group_member').on('click', function (event) {\r\n\t\r\n\tevent.preventDefault();\r\n\t\r\n\tvar elem = $(this);\r\n\t\r\n\t$.ajax({\r\n\t\turl:     chumly_vars.ajax_url,\r\n\t\ttype:    'POST',\r\n\t\tdata:    {\r\n\t\t\t'action':   'chumly_remove_group_member',\r\n\t\t\t'group_id': elem.data('group_id'),\r\n\t\t\t'user_id':  elem.data('user_id')\r\n\t\t},\r\n\t\tsuccess: function (data) {\r\n\t\t\t\r\n\t\t\telem.parents('li').fadeOut(400, 'swing', function () {\r\n\t\t\t\t$(this).remove();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n});\r\n\r\n\r\nvar current_user_id   = chumly_vars.user_id,\r\n    current_timestamp = $.now();\r\n\r\n\r\n$('button.group_connection_action').on('click', function () {\r\n\t\r\n\tvar trigger           = $(this),\r\n\t    membership_status = trigger.attr('membership-status'),\r\n\t    target_id         = trigger.attr('connection-id'),\r\n\t    connection_action = trigger.attr('connection-action');\r\n\t\r\n\t//console.log(membership_status);\r\n\t\r\n\t//console.log(connection_action);\r\n\t//console.log(target_id);\r\n\t//console.log(current_user_id);\r\n\t// console.log(current_timestamp);\r\n\t\r\n\t$.ajax({\r\n\t\turl:      chumly_vars.ajax_url,\r\n\t\ttype:     'POST',\r\n\t\tdataType: 'json',\r\n\t\tdata:     {\r\n\t\t\taction:            'chumly_update_membership_state',\r\n\t\t\tcurrent_user:      current_user_id,\r\n\t\t\tstatus:            membership_status,\r\n\t\t\tgroup_id:          target_id,\r\n\t\t\tconnection_action: connection_action\r\n\t\t},\r\n\t\tsuccess:  function (data) {\r\n\t\t\t\r\n\t\t\t//$('.chumly').prepend('<pre>' + JSON.stringify(data, null, 2) + '</pre>');\r\n\t\t\t\r\n\t\t\t//$('.hero').after('<pre>' + JSON.stringify(data, null, 2) + '</pre>');\r\n\t\t\t\r\n\t\t\t//data = $.parseJSON(data);\r\n\t\t\tconsole.log(data);\r\n\t\t\tconsole.log('Complete', trigger);\r\n\t\t\t\r\n\t\t\t\r\n\t\t\ttrigger.removeAttr('class')\r\n\t\t\t.addClass('button ' + data.css_class)\r\n\t\t\t.attr('membership-status', data.status)\r\n\t\t\t.attr('connection-id', data.group_id)\r\n\t\t\t.attr('connection-action', data.action)\r\n\t\t\t.html(data.button_label);\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n\t\r\n});\r\n\r\n\r\n$('.approve_group_member').on('click', function (event) {\r\n\t\r\n\tevent.preventDefault();\r\n\t\r\n\tvar elem     = $(this),\r\n\t    user_id  = elem.data('user_id'),\r\n\t    group_id = elem.data('group_id');\r\n\t\r\n\t$.ajax({\r\n\t\turl:     chumly_vars.ajax_url,\r\n\t\ttype:    'POST',\r\n\t\tdata:    {\r\n\t\t\taction:   'chumly_approve_group_member',\r\n\t\t\tuser_id:  user_id,\r\n\t\t\tgroup_id: group_id\r\n\t\t},\r\n\t\tsuccess: function (data) {\r\n\t\t\t\r\n\t\t\telem.html('Approved').removeClass('approve_group_member');\r\n\t\t\telem.siblings('.decline_group_member').remove();\r\n\t\t\t\r\n\t\t}\r\n\t})\r\n\t\r\n});\r\n\r\n\r\n$('.decline_group_member').on('click', function (event) {\r\n\t\r\n\tevent.preventDefault();\r\n\t\r\n\tvar elem     = $(this),\r\n\t    user_id  = elem.data('user_id'),\r\n\t    group_id = elem.data('group_id');\r\n\t\r\n\t$.ajax({\r\n\t\turl:     chumly_vars.ajax_url,\r\n\t\ttype:    'POST',\r\n\t\tdata:    {\r\n\t\t\taction:   'chumly_decline_group_member',\r\n\t\t\tuser_id:  user_id,\r\n\t\t\tgroup_id: group_id\r\n\t\t},\r\n\t\tsuccess: function (data) {\r\n\t\t\t\r\n\t\t\telem.html('Declined').removeClass('decline_group_member');\r\n\t\t\telem.siblings('.approve_group_member').remove();\r\n\t\t\t\r\n\t\t}\r\n\t})\r\n\t\r\n})\r\n\r\n","/**\r\n * Created by matthew on 16/1/18.\r\n */\r\n\r\n$.fn.chumlyConnect = function () {\r\n\r\n\tvar trigger = $(this).find('[ajax-trigger=\"member_connection_action\"]');\r\n\t\r\n\ttrigger.on('click', function (event) {\r\n\t\t\r\n\t\tvar\trequest_receiver_id = trigger.attr('target-user'),\r\n\t\t\trequest_sender_id = chumly_vars.user_id,\r\n\t\t\trequest_timestamp = $.now(),\r\n\t\t\tconnection_status = trigger.attr('connection-status'),\r\n\t\t\tconnection_id = trigger.attr('connection-id'),\r\n\t\t\tconnection_action = trigger.attr('connection-action');\r\n\t\t\r\n\t\tevent.preventDefault();\r\n\t\tconsole.log(request_receiver_id);\r\n\t\tconsole.log(connection_action);\r\n\t\t\r\n\t\t$.ajax({\r\n\t\t\turl: chumly_vars.ajax_url,\r\n\t\t\ttype: 'POST',\r\n\t\t\tdataType: 'json',\r\n\t\t\tdata: {\r\n\t\t\t\taction: 'chumly_update_connection_state',\r\n\t\t\t\treceiver_id: request_receiver_id,\r\n\t\t\t\tsender_id: request_sender_id,\r\n\t\t\t\ttimestamp: request_timestamp,\r\n\t\t\t\tstatus: connection_status,\r\n\t\t\t\tconnection_id: connection_id,\r\n\t\t\t\tconnection_action: connection_action\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\t//$('#connection_ajax_response').html(data);\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tif (!trigger.hasClass('dropdown__menu__item')) {\r\n\t\t\t\t\tconsole.log('Is Button');\r\n\t\t\t\t\ttrigger.removeAttr('class')\r\n\t\t\t\t\t.addClass('button button--small ' + data.css_class)\r\n\t\t\t\t\t.attr('connection-status', data.status)\r\n\t\t\t\t\t.attr('connection-id', data.connection_id)\r\n\t\t\t\t\t.attr('connection-action', data.connection_action)\r\n\t\t\t\t\t.html(data.button_label);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Is Dropdown');\r\n\t\t\t\t\ttrigger.parents('.dropdown__inner').find('button').removeAttr('class')\r\n\t\t\t\t\t.addClass('button button--small ' + data.css_class)\r\n\t\t\t\t\t.attr('connection-status', data.status)\r\n\t\t\t\t\t.attr('connection-id', data.connection_id)\r\n\t\t\t\t\t.attr('connection-action', data.connection_action)\r\n\t\t\t\t\t.attr('target-user', data.target_user)\r\n\t\t\t\t\t.attr('ajax-trigger', 'member_connection_action')\r\n\t\t\t\t\t.html(data.button_label);\r\n\t\t\t\t\t\r\n\t\t\t\t\ttrigger.parents('.dropdown__menu').remove();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror: function (xhr, status, error) {\r\n\t\t\t\tvar err = eval(\"(\" + xhr.responseText + \")\");\r\n\t\t\t\tconsole.log('Error: ', err.Message);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t});\r\n\t\r\n};\r\n\t\r\n","/**\r\n * Created by matthew on 25/7/17.\r\n */\r\nvar search_results    = $('.search__results'),\r\n    recipients_list   = $('.message-centre__feed__recipients .user-list'),\r\n    message_window    = $('.message-centre__feed__content'),\r\n    message_container = $('.message-centre__feed__content__inner');\r\n\r\nfunction chumlyScrollMessages(duration) {\r\n\t$(message_window).animate({scrollTop: $(message_window)[0].scrollHeight}, duration);\r\n}\r\n\r\nif ($('.message-centre').length) {\r\n\tchumlyScrollMessages(0);\r\n}\r\n\r\n// Search for users\r\n$('#find_recipient').on('keyup', function () {\r\n\t\r\n\tvar elem         = $(this),\r\n\t    query_string = elem.val();\r\n\t\r\n\tif (elem.val() != '') {\r\n\t\t\r\n\t\trecipients_list.hide();\r\n\t\tsearch_results.show();\r\n\t\t\r\n\t} else {\r\n\t\t\r\n\t\trecipients_list.show();\r\n\t\tsearch_results.hide();\r\n\t\t\r\n\t}\r\n\t\r\n\t$.ajax({\r\n\t\turl:     chumly_vars.ajax_url,\r\n\t\ttype:    'POST',\r\n\t\tdata:    {\r\n\t\t\taction:        'chumly_search_members',\r\n\t\t\tquery:         query_string,\r\n\t\t\toutput_option: 'message_center'\r\n\t\t},\r\n\t\tsuccess: function (data) {\r\n\t\t\t$('.search__results').html(data);\r\n\t\t}\r\n\t});\r\n});\r\n\r\n\r\n// Start conversation between users or load existing\r\n$('.message-centre').on('click', '.user-list__item', function (event) {\r\n\t\r\n\tevent.preventDefault();\r\n\t\r\n\tvar elem = $(this);\r\n\t\r\n\t$('#find_recipient').val('');\r\n\t$('.message-centre .user-list__item').removeClass('is-active');\r\n\t\r\n\telem.find('.unread_state').attr('class', 'icon unread_state is-hidden');\r\n\telem.find('.read_state').attr('class', 'icon read_state is-visible');\r\n\t\r\n\telem.removeClass('is-notification').addClass('is-active');\r\n\t\r\n\tsearch_results.hide();\r\n\trecipients_list.show();\r\n\t\r\n\tvar trigger   = elem,\r\n\t    thread    = trigger.attr('thread_id'),\r\n\t    recipient = trigger.attr('receiver_id');\r\n\t\r\n\t$.ajax({\r\n\t\turl:      chumly_vars.ajax_url,\r\n\t\ttype:     'POST',\r\n\t\tdataType: 'json',\r\n\t\tdata:     {\r\n\t\t\taction:       'chumly_trigger_conversation',\r\n\t\t\tthread_id:    thread,\r\n\t\t\trecipient_id: recipient,\r\n\t\t\tsender_id:    chumly_vars.user_id\r\n\t\t},\r\n\t\tsuccess:  function (data) {\r\n\t\t\t\r\n\t\t\t//console.log(data);\r\n\t\t\t\r\n\t\t\t$('#recipient_id').val(recipient);\r\n\t\t\t$('#thread_id').val(data.thread_id);\r\n\t\t\t$('.message-centre__feed__content__inner').html(data.messages);\r\n\t\t\t\r\n\t\t\tif (data.new_conversation == 1) {\r\n\t\t\t\t\r\n\t\t\t\t$('.message-centre__feed__recipients').find('.user-list').prepend('<li class=\"user-list__item is-active\"  receiver_id=\"' + recipient + '\" thread_id=\"' + data.thread_id + '\">' +\r\n\t\t\t\t\t'<a href=\"#\" class=\"user-list__item__inner user-list__item__inner--media-icon\" role=\"button\">' +\r\n\t\t\t\t\t'<div class=\"user-list__item__media user-list__item__media--small\">' +\r\n\t\t\t\t\t'<figure class=\"avatar\">' +\r\n\t\t\t\t\t'<img class=\"avatar__image\" src=\"' + data.avatar_url + '\"/>' +\r\n\t\t\t\t\t'</figure>' +\r\n\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t'<div class=\"user-list__item__text\">' +\r\n\t\t\t\t\t'<span class=\"user-list__item__text--primary\">' + data.username + '</span>' +\r\n\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t'<div class=\"user-list__item__icon\">' +\r\n\t\t\t\t\t'<svg class=\"icon\" aria-hidden=\"true\">' +\r\n\t\t\t\t\t'<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"' + chumly_vars.plugin_url + 'frontend/images/icons/svg-symbols.svg#angle-right\"></use>' +\r\n\t\t\t\t\t'</svg>' +\r\n\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t'</a>' +\r\n\t\t\t\t\t'</li>'\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t//console.log(data.thread_id);\r\n\t\t\t\t$('[thread_id=' + data.thread_id + ']').addClass('is-active');\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tchumlyScrollMessages(0);\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n\t\r\n});\r\n\r\n\r\nfunction chumlyPollForMessage() {\r\n\t\r\n\tvar lastLoadedMessage = message_container.find('.message').last().attr('timestamp');\r\n\t//console.log('polling');\r\n\t\r\n\t$.ajax({\r\n\t\turl:     chumly_vars.ajax_url,\r\n\t\ttype:    'POST',\r\n\t\tdata:    {\r\n\t\t\taction:       'chumly_poll_new_message',\r\n\t\t\tlast_message: lastLoadedMessage,\r\n\t\t\treceiver_id:  $('#recipient_id').val(),\r\n\t\t\tthread_id:    $('#thread_id').val()\r\n\t\t},\r\n\t\tsuccess: function (data) {\r\n\t\t\t\r\n\t\t\tvar scroll_height   = message_window[0].scrollHeight,\r\n\t\t\t    scroll_position = message_window.scrollTop(),\r\n\t\t\t    feed_height     = message_window.height();\r\n\t\t\t\r\n\t\t\tmessage_container.find('.message').last().after(data);\r\n\t\t\t\r\n\t\t\tif ((scroll_height - feed_height) == scroll_position) {\r\n\t\t\t\t//console.log('Bottom');\r\n\t\t\t\tchumlyScrollMessages(0);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n}\r\n\r\n\r\n$('#poll_message').on('click', function (e) {\r\n\te.preventDefault();\r\n\tchumlyPollForMessage();\r\n});\r\n\r\n\r\nif ($('.message-centre').length) {\r\n\tsetInterval(function () {\r\n\t\tchumlyPollForMessage();\r\n\t}, 1500);\r\n}\r\n\r\n\r\n$('#message_editor').keypress(function (event) {\r\n\t\r\n\tif (event.keyCode == 13 && event.shiftKey) {\r\n\t\tvar content = this.value;\r\n\t\tvar caret   = getCaret(this);\r\n\t\t\r\n\t\tthis.value = content.substring(0, caret);\r\n\t\tevent.stopPropagation();\r\n\t\t\r\n\t} else if (event.keyCode == 13) {\r\n\t\t\r\n\t\t$('#send_message').click();\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n});\r\n\r\nfunction getCaret(el) {\r\n\tif (el.selectionStart) {\r\n\t\t\r\n\t\treturn el.selectionStart;\r\n\t\t\r\n\t} else if (document.selection) {\r\n\t\t\r\n\t\tel.focus();\r\n\t\tvar r = document.selection.createRange();\r\n\t\t\r\n\t\tif (r == null) {\r\n\t\t\t\r\n\t\t\treturn 0;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar re = el.createTextRange(),\r\n\t\t    rc = re.duplicate();\r\n\t\t\r\n\t\tre.moveToBookmark(r.getBookmark());\r\n\t\trc.setEndPoint('EndToStart', re);\r\n\t\t\r\n\t\treturn rc.text.length;\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n\r\n$('#send_message').on('click', function (e) {\r\n\t\r\n\te.preventDefault();\r\n\tvar messageContent = $('#message_editor').val(),\r\n\t    userdata       = chumly_vars.user_data,\r\n\t    profileImage   = chumly_vars.avatar;\r\n\t\r\n\t$('#message_editor').val('');\r\n\t\r\n\tmessage_container.find('.message').last().after('' +\r\n\t\t'<div class=\"message\" timestamp=\"' + Math.floor(new Date().getTime() / 1000) + '\">' +\r\n\t\t'<div class=\"message__media\">' +\r\n\t\t'<figure class=\"avatar\">' +\r\n\t\t'<img class=\"avatar__image\" src=\"' + profileImage + '\">' +\r\n\t\t'</figure>' +\r\n\t\t'</div>' +\r\n\t\t'<div class=\"message__content\">' +\r\n\t\t'<a class=\"message__sender\" href=\"#\">' + userdata.data.display_name + '</a>' +\r\n\t\t'<div class=\"message__body wysiwyg\" style=\"white-space: pre\">' +\r\n\t\tmessageContent +\r\n\t\t'</div>' +\r\n\t\t'</div>' +\r\n\t\t'</div>'\r\n\t);\r\n\t\r\n\tchumlyScrollMessages(1000);\r\n\t\r\n\tif ($.trim(messageContent)) {\r\n\t\t$.ajax({\r\n\t\t\turl:  chumly_vars.ajax_url,\r\n\t\t\ttype: 'POST',\r\n\t\t\tdata: {\r\n\t\t\t\taction:          'chumly_send_message',\r\n\t\t\t\tmessage_content: messageContent,\r\n\t\t\t\treceiver_id:     $('#recipient_id').val(),\r\n\t\t\t\tthread_id:       $('#thread_id').val()\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});\r\n\r\n","/**\r\n * Created by matthew on 25/7/17.\r\n */\r\nfunction misc() {\r\n\t\r\n\tautosize($('textarea'));\r\n\t\r\n\tvar userMenu   = $('.user-menu__text'),\r\n\t    sourceElem = $('.user-menu__text').parents('.chumly').parents('ul').find('a').first(),\r\n\t    fontFamily = sourceElem.css('font-family'),\r\n\t    fontSize   = sourceElem.css('font-size');\r\n\t\r\n\tuserMenu.css('font-family', fontFamily);\r\n\tuserMenu.css('font-size', fontSize);\r\n\t\r\n\t$(\"a[rel^='prettyPhoto']\").prettyPhoto({\r\n\t\tsocial_tools: ''\r\n\t});\r\n\t\r\n\t\r\n\ttinymce.init({\r\n\t\tselector:                    '#profile_10',\r\n\t\tmode:                        \"exact\",\r\n\t\telements:                    'pre-details',\r\n\t\ttheme:                       \"modern\",\r\n\t\tskin:                        \"lightgray\",\r\n\t\tmenubar:                     false,\r\n\t\tstatusbar:                   false,\r\n\t\ttoolbar:                     [\r\n\t\t\t\"bold italic | alignleft aligncenter alignright | bullist numlist outdent indent | undo redo\"\r\n\t\t],\r\n\t\tplugins:                     \"paste\",\r\n\t\tpaste_auto_cleanup_on_paste: true,\r\n\t\tpaste_postprocess:           function (pl, o) {\r\n\t\t\to.node.innerHTML = o.node.innerHTML.replace(/&nbsp;+/ig, \" \");\r\n\t\t}\r\n\t});\r\n\t\t\r\n}","/**\r\n * Created by matthew on 8/2/18.\r\n */\r\n(function ($) {\t\t\r\n\t\r\n\t$.fn.chumlyModal = function (method) {\r\n\t\t\r\n\t\tvar elem = $(this),\r\n\t\t    triggers = elem.find('.chumly-modal__trigger'),\r\n\t\t\ttarget = elem.find('.modal'),\r\n\t\t\tsettings = {\r\n\t\t\t\tactiveClass: 'is-active',\r\n\t\t\t\tvisibleClass: 'is-active'\r\n\t\t\t};\r\n\t\t\r\n\t\t\tvar init = function (method) {\r\n\t\t\t\t\r\n\t\t\t\ttriggers.off('click').on('click', function (event) {\r\n\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar trigger = $(this);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (target.hasClass(settings.activeClass)) {\r\n\t\t\t\t\t\ttoggle(target, 'off');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttoggle(target, 'on');\r\n\t\t\t\t\t\tvar postID = trigger.data('post_id');\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttarget.find('.modal__header, .modal__body').remove();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tloadPost(postID, function(){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttarget.find($('input[name=\"loaded_post_id\"]')).val(postID);\r\n\t\t\t\t\t\t\ttarget.find($('.chumly .search')).chumlySearch();\r\n\t\t\t\t\t\t\ttoggleHeaderContent();\r\n\t\t\t\t\t\t\ttarget.find('.modal__footer').addClass('is-active');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\ttoggle = function (target, state) {\r\n\t\t\t\t\r\n\t\t\t\tswitch (state) {\r\n\t\t\t\t\tcase 'off':\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tscrollOn();\r\n\t\t\t\t\t\ttarget.removeClass(settings.visibleClass);\r\n\t\t\t\t\t\ttarget.css('visibility', 'hidden').find('.modal__inner').removeClass(settings.visibleClass);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'on':\r\n\r\n\t\t\t\t\t\tscrollOff();\r\n\t\t\t\t\t\ttarget.css('visibility', 'visible').addClass(settings.visibleClass);\r\n\t\t\t\t\t\t//target.find('.modal__inner').css('visibility', 'visible').addClass(settings.visibleClass);\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tloadPost = function (postID, callback) {\r\n\t\t\t\t\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl: chumly_vars.ajax_url,\r\n\t\t\t\t\ttype: 'POST',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t'action': 'chumly_load_modal_body',\r\n\t\t\t\t\t\t'modal_template': target.data('modal_template'),\r\n\t\t\t\t\t\t'post_id': postID\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsuccess: function (data) {\r\n\t\t\t\t\t\ttarget.find('.modal__inner').addClass('is-active').prepend(data);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\ttoggleHeaderContent = function(callback){\r\n\t\t\t\t\r\n\t\t\t\tvar selector = target.find($('select[name=\"target_select\"]'));\r\n\t\t\t\t\r\n\t\t\t\tselector.on('change', function(){\r\n\t\t\t\t\tvar targetElem = $('.' + $(this).val());\r\n\t\t\t\t\t\r\n\t\t\t\t\ttarget.find($('.search').parent().addClass('is-hidden').removeClass('is-active'));\r\n\t\t\t\t\ttargetElem.removeClass('is-hidden').addClass('is-active');\r\n\t\t\t\t\ttarget.find($('.search__output')).empty();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(callback) {\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t\r\n\t\t\r\n\t\tif (method == 'close') {\r\n\t\t\t\r\n\t\t\ttoggle(target);\r\n\t\t\t\r\n\t\t} else if (method == 'open') {\r\n\t\t\t\r\n\t\t\ttoggle(target, 'on');\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tinit();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t};\r\n\r\n}(jQuery));","/**\r\n * Created by matthew on 21/6/18.\r\n */\r\n(function ($) {\r\n\t\r\n\t$.fn.chumlyNotification = function () {\r\n\t\t\r\n\t\tvar elem    = $(this),\r\n\t\t    trigger = elem.find('svg'),\r\n\t\t    ID      = elem.data('notification_id');\r\n\t\t\r\n\t\tvar init                  = function () {\r\n\t\t\t\r\n\t\t\t    elem.on('click', 'a', function () {\r\n\t\t\t\t\t\t\t    \r\n\t\t\t\t    markNotificationsRead(ID);\r\n\t\t\t\t\r\n\t\t\t    });\r\n\t\t\t\r\n\t\t\t    trigger.on('click', function (event) {\r\n\t\t\t\t\r\n\t\t\t\t    var action = $(this).parent().data('action');\r\n\t\t\t\t\r\n\t\t\t\t    if (action) {\r\n\t\t\t\t\t    event.preventDefault();\r\n\t\t\t\t    }\r\n\t\t\t\t\r\n\t\t\t\t    if (action == 'mark_notifications_read') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t    markNotificationsRead(ID);\r\n\t\t\t\t\t\r\n\t\t\t\t    }\r\n\t\t\t\t\r\n\t\t\t    });\r\n\t\t\t\r\n\t\t    },\r\n\t\t    markNotificationsRead = function (ID, callback) {\r\n\t\t\t\r\n\t\t\t    $.ajax({\r\n\t\t\t\t    url:     chumly_vars.ajax_url,\r\n\t\t\t\t    type:    'POST',\r\n\t\t\t\t    data:    {\r\n\t\t\t\t\t    action:          'chumly_mark_notification_read',\r\n\t\t\t\t\t    notification_id: ID\r\n\t\t\t\t    },\r\n\t\t\t\t    success: function (data) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t    elem.removeClass('notification--unread');\r\n\t\t\t\t\t\r\n\t\t\t\t\t    var notificationIndicator = $('.user-menu__indicator.notifications'),\r\n\t\t\t\t\t        count                 = notificationIndicator.html();\r\n\t\t\t\t\t\r\n\t\t\t\t\t    if (count > 1) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t    notificationIndicator.html((count - 1));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t    } else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t    notificationIndicator.hide();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t    }\r\n\t\t\t\t\t\r\n\t\t\t\t\t    if(callback){\r\n\t\t\t\t\t\t    callback();\r\n\t\t\t\t\t    }\r\n\t\t\t\t\t    \r\n\t\t\t\t    }\r\n\t\t\t    });\r\n\t\t\t\r\n\t\t    }\r\n\t\t\r\n\t\t\r\n\t\tinit();\r\n\t\t\r\n\t}\r\n\t\r\n}(jQuery));","/**\r\n * Created by matthew on 24/10/18.\r\n */\r\nfunction chumlyLoadFeedTemplate(post_id, post_format, post_type) {\r\n\t\r\n\t$.ajax({\r\n\t\turl:     chumly_vars.ajax_url,\r\n\t\ttype:    'POST',\r\n\t\tdata:    {\r\n\t\t\taction:      'chumly_load_feed_part',\r\n\t\t\tpost_id:     post_id,\r\n\t\t\tpost_format: post_format,\r\n\t\t\tpost_type:   post_type\r\n\t\t},\r\n\t\tsuccess: function (template) {\r\n\t\t\t//console.log('Loading template', template);\r\n\t\t\t$('.news-feed').prepend(template).chumlyCommentFormTriggers();\r\n\t\t\t$('.news-feed__item').first().chumlyScrollTo();\r\n\r\n\t\t\t$('body').find($('a[rel=\"prettyPhoto\"]')).prettyPhoto({\r\n\t\t\t\tsocial_tools: ''\r\n\t\t\t});\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n\t\r\n}\r\n","/**\r\n * Created by matthew on 15/11/17.\r\n */\r\n/**\r\n * TRIGGER PROFILE SAVE PROCESS\r\n *\r\n * Run the processes to upload files and\r\n * update a user profile.\r\n */\r\n$('.chumly').on('click', '.update_profile', function (event) {\r\n\t\r\n\tchumlyPrepareProfileForm(event, $(this));\r\n\t\t\r\n});\r\n\r\n\r\n/** PROCESS FORM\r\n *\r\n * Process anything that's required before the form is submitted\r\n * such as saving the tinyMCE content to the textarea.\r\n *\r\n */\r\nfunction chumlyPrepareProfileForm(event, trigger) {\r\n\t\r\n\tevent.preventDefault();\r\n\t\r\n\tvar form          = trigger.parents('form'),\r\n\t    tinymceEditor = $(form).find('textarea.form__group__field--wysiwyg');\r\n\t\r\n\tif (tinymceEditor.length) {\r\n\t\t\r\n\t\ttinymce.get(tinymceEditor.attr('id')).save();\r\n\t\t\r\n\t\tchumlySaveProfile(trigger);\r\n\t\t\r\n\t} else {\r\n\t\t\r\n\t\t//console.log('No tinyMCE');\r\n\t\tchumlySaveProfile(trigger);\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n/** SAVE PROFILE\r\n *\r\n * Save Chumly profile data\r\n *\r\n * @param event Event from trigger - e.g. click\r\n * @param trigger The element which has triggered the event\r\n */\r\nfunction chumlySaveProfile(trigger) {\r\n\t\r\n\tvar form      = trigger.parents('form'),\r\n\t    formData = new FormData(form[0]);\r\n\t\r\n\tformData.append('action', 'chumly_update_profile');\r\n\t\t\r\n\tif(form.valid()) {\r\n\t\t\r\n\t\ttrigger.val('Updating...').attr('disabled', 'disabled');\r\n\t\t\r\n\t\t$.ajax({\r\n\t\t\turl:         chumly_vars.ajax_url,\r\n\t\t\ttype:        'POST',\r\n\t\t\tprocessData: false,\r\n\t\t\tcontentType: false,\r\n\t\t\tcache:       false,\r\n\t\t\tdata:        formData,\r\n\t\t\tsuccess:     function (data) {\r\n\t\t\t\t\r\n\t\t\t\t$('#ajax_testing').html(data);\r\n\t\t\t\tconsole.log('Success');\r\n\t\t\t\tif ($(form).find('input[type=\"file\"]').length) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tchumlyUploadFiles(form, 0, null, null, function () {\r\n\r\n\t\t\t\t\t\tchumlyPrompt(trigger, 'success', 'Success!', \"Your profile has been updated. <a href='/profile'>Go back to your profile?</a>\");\r\n\t\t\t\t\t\ttrigger.val('Update Profile').removeAttr('disabled');\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tchumlyPrompt(trigger, 'success', 'Success!', \"Your profile has been updated. <a href='/profile'>Go back to your profile?</a>\");\r\n\t\t\t\t\ttrigger.val('Update Profile').removeAttr('disabled');\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n","/**\r\n * Created by matthew on 18/10/18.\r\n */\r\n(function($) {\r\n\t\r\n\t$.fn.chumlyPrompt = function(method) {\r\n\t\tvar elem = $(this),\r\n\t\t    promptElem = $(),\r\n\t\t    closeButton = elem.find('.chumly-prompt__close'),\r\n\t\t    showButton = elem.find('.chumly-prompt__show'),\r\n\t\t    settings = {\r\n\t\t\t    activeClass: 'is-active',\r\n\t\t\t    destroyOnClose: true,\r\n\t\t\t    isAlertChildElem: false,\r\n\t\t\t    hideTimeout: 600\r\n\t\t    };\r\n\r\n\t\tvar init = function(method) {\r\n\t\t\t\tconsole.log('Prompt INIT', elem);\r\n\t\t\t    settings = $.extend(true, {}, settings, elem.parseSettings());\r\n\r\n\t\t\t    // Load alert elem based on setting\r\n\t\t\t    if(settings.isAlertChildElem) {\r\n\t\t\t\t    promptElem = elem.find('.chumly-prompt__elem');\r\n\t\t\t    } else {\r\n\t\t\t\t    promptElem = elem;\r\n\t\t\t    }\r\n\r\n\t\t\t    // If there's a close button, add a listener\r\n\t\t\t    if(closeButton.any()) {\r\n\r\n\t\t\t\t    closeButton.on('click', function(evt) {\r\n\t\t\t\t\t    evt.preventDefault();\r\n\r\n\t\t\t\t\t    toggle('close');\r\n\r\n\t\t\t\t    });\r\n\r\n\t\t\t    }\r\n\r\n\t\t\t    // The same for show button\r\n\t\t\t    if(showButton.any()) {\r\n\r\n\t\t\t\t    showButton.on('click', function(evt) {\r\n\r\n\t\t\t\t\t    evt.preventDefault();\r\n\r\n\t\t\t\t\t    toggle('show');\r\n\t\t\t\t    });\r\n\r\n\t\t\t    }\r\n\r\n\t\t\t    if(method == 'show'){\r\n\t\t\t\t    toggle('show');\r\n\t\t\t    }\r\n\r\n\t\t    },\r\n\r\n\t\t    // Hide or show alert element\r\n\t\t    toggle = function(command) {\r\n\r\n\t\t\t    switch(command) {\r\n\t\t\t\t    case 'hide':\r\n\t\t\t\t    default:\r\n\t\t\t\t\t\tconsole.log('Prompt Hide', promptElem);\r\n\t\t\t\t\t\tscrollOn();\r\n\t\t\t\t\t    promptElem.removeClass(settings.activeClass);\r\n\r\n\t\t\t\t\t    // If required, wait a second then remove element\r\n\t\t\t\t\t    setTimeout(function() {\r\n\r\n\t\t\t\t\t\t    if(settings.destroyOnClose) {\r\n\t\t\t\t\t\t\t    elem.remove();\r\n\t\t\t\t\t\t    } else {\r\n\t\t\t\t\t\t\t    promptElem.css('visibility', 'hidden');\r\n\t\t\t\t\t\t    }\r\n\r\n\t\t\t\t\t    }, settings.hideTimeout);\r\n\r\n\t\t\t\t\t    break;\r\n\r\n\t\t\t\t    case 'show':\r\n\t\t\t\t\t\tconsole.log('Prompt Show', promptElem);\r\n\t\t\t\t\t    $(document).chumlyModal('close');\r\n\t\t\t\t\t\tscrollOff();\r\n\t\t\t\t\t    promptElem.css('visibility', 'visible').addClass(settings.activeClass);\r\n\t\t\t\t\t    break;\r\n\t\t\t    }\r\n\t\t    };\r\n\t\t\r\n\t\tinit(method);\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\t\r\n}($));\r\n\r\n\r\nfunction chumlyPrompt (target, alertType, promptTitle, promptMessage, callback) {\r\n\t\r\n\t//console.log(chumly_vars);\r\n\r\n\tvar output = $('<div class=\"chumly-prompt\" data-module=\"chumly-prompt\" data-settings=\\'{\"destroyOnClose\": true, \"isAlertChildElem\": true}\\'>' +\r\n\t\t//'<button class=\"button chumly-prompt__show\">Show Default Prompt</button>' +\r\n\t\t'<div class=\"prompt chumly-prompt__elem prompt--' + alertType + '\" role=\"alert\" style=\"visibility: hidden\">' +\r\n\t\t'<div class=\"prompt__window\">' +\r\n\t\t'<div class=\"prompt__header\">' +\r\n\t\t'<h3 class=\"prompt__heading\">' + promptTitle + '</h3></div>' +\r\n\t\t'<div class=\"prompt__content wysiwyg\">' +\r\n\t\t'<p>' + promptMessage + '</p>' +\r\n\t\t'</div>' +\r\n\t\t'<div class=\"prompt__button\">' +\r\n\t\t'<button class=\"button chumly-prompt__close\">Okay, thanks</button>' +\r\n\t\t'</div>' +\r\n\t\t'</div>' +\r\n\t\t'<div class=\"prompt__overlay chumly-prompt__close\" aria-hidden=\"true\"></div>' +\r\n\t\t'</div>' +\r\n\t\t'</div>');\r\n\t\t\r\n\t\r\n\t//var output = '<div class=\"alert__modal\" data-module=\"chumly-modal\">' +\r\n\t//\t'<div class=\"modal is-active\" style=\"visibility: visible\">' +\r\n\t//\t'<div class=\"modal__inner is-active\" style=\"visibility: visible\">' +\r\n\t//\t'<div class=\"alert chumly-alert__elem is-active alert--' + alertType + '\" data-module=\"chumly-alert\" role=\"alert\">' +\r\n\t//\t'<div class=\"alert__content\">' + message + '</div>' +\r\n\t//\t'<button class=\"alert__close chumly-alert__close\">' +\r\n\t//\t'<span class=\"is-hidden--text\">Click here to close this alert</span>' +\r\n\t//\t'<svg aria-hidden=\"true\" class=\"alert__content__icon icon\" aria-hidden=\"true\">' +\r\n\t//\t'<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"' + chumly_vars.plugin_url + 'frontend/images/icons/svg-symbols.svg#cross\"></use>' +\r\n\t//\t'</svg>' +\r\n\t//\t'</button>' +\r\n\t//\t'</div>' +\r\n\t//\t'</div>' +\r\n\t//\t'<div class=\"modal__mask chumly-modal__trigger\"></div>' +\r\n\t//\t'</div>' +\r\n\t//\t'</div>';\r\n\t\r\n\t\r\n\ttarget.parents('.chumly').prepend(output);\r\n\t\r\n\toutput.chumlyPrompt('show');\r\n\t\r\n\tif(callback){\r\n\t\tcallback();\r\n\t}\r\n\t\r\n\t/*$.ajax({\r\n\t\turl:     chumly_vars.ajax_url,\r\n\t\ttype:    'POST',\r\n\t\tdata:    {\r\n\t\t\t'action':     'chumly_load_alert_modal',\r\n\t\t\t'alert_type': alertType,\r\n\t\t\t'message':    message\r\n\t\t},\r\n\t\tsuccess: function (data) {\r\n\t\t\t//console.log(data);\r\n\t\t\t//modal.empty().append(data);\r\n\t\t\t\r\n\t\t\ttarget.parents('.chumly').append(data).chumlyModal().chumlyAlert(true);\r\n\t\t\t\r\n\t\t\tif (callback) {\r\n\t\t\t\t\r\n\t\t\t\tcallback();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t});*/\r\n\t\r\n}\r\n\t\r\n","/**\r\n * Created by matthew on 25/7/17.\r\n */\r\n/**\r\n * TRIGGER POST CREATION PROCESS\r\n *\r\n * Run the processes to upload files\r\n * and create a post.\r\n */\r\n$('.chumly form.editor').find('input, textarea').on('change keyup', function (event) {\r\n\t//console.log(event);\r\n\tvar form         = $(this).parents('form'),\r\n\t    text         = form.find('textarea'),\r\n\t    submitButton = form.find('#status_submit');\r\n\t\r\n\tif(event.keyCode != 13) {\r\n\t\t\r\n\t\tif ($.trim(text.val())) {\r\n\t\t\t\r\n\t\t\tsubmitButton.removeAttr('disabled');\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tsubmitButton.attr('disabled', 'disabled');\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t$.each(form.find('input[type=\"file\"]'), function (index, value) {\r\n\t\t\t\r\n\t\t\tif (value.files.length > 0) {\r\n\t\t\t\t\r\n\t\t\t\t//console.log('has files');\r\n\t\t\t\tsubmitButton.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n});\r\n\r\n$('#status_submit').on('click', function (event) {\r\n\t\r\n\tchumlySaveStatusPost(event, $(this), $(this).parents('form'));\r\n\t\r\n});\r\n\r\n$('.chumly form.editor textarea').on('keydown', function (event) {\r\n\t\r\n\tvar form         = $(this).parents('form'),\r\n\t    text         = $(this),\r\n\t    submitButton = form.find('#status_submit');\r\n\t\r\n\tif (event.which == 13) {\r\n\t\t\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tif ($.trim(text.val())) {\r\n\t\t\t\r\n\t\t\tchumlySaveStatusPost(event, submitButton, form);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n});\r\n\r\n$(document).on('click', '.share_post', function (event) {\r\n\t//console.log('Modal submitting...');\r\n\tchumlyShareStatusPost(event, $(this), $(this).parents('.modal').find('.modal__body form'));\r\n\t\r\n});\r\n\r\n\r\n/**\r\n * SAVE POST\r\n *\r\n * Save posts from the Post Form such as the\r\n * status post form on the default profile page.\r\n *\r\n * @param event Event from trigger - e.g. click\r\n * @param trigger The element which has triggered the event\r\n */\r\nfunction chumlySaveStatusPost(event, trigger, form) {\r\n\t/**\r\n\t * Submit a post status to the database and load into news feed\r\n\t */\r\n\tevent.preventDefault();\r\n\tconsole.log('Saving Post...');\r\n\tvar form_data      = new FormData(form[0]),\r\n\t    upload_trigger = false,\r\n\t    post_format    = form.find('input[name=\"post_format\"]').val();\r\n\r\n\tif(!trigger.prop('disabled')) {\r\n\t\t\r\n\t\ttrigger.attr('disabled', 'disabled').text('Saving...');\r\n\t\t\r\n\t\t$.each($(form).find('input[type=\"file\"]'), function (index, value) {\r\n\t\t\t\r\n\t\t\tif (value.files.length > 0) {\r\n\t\t\t\t\r\n\t\t\t\tform_data.append('has_files', true);\r\n\t\t\t\tpost_format    = 'image';\r\n\t\t\t\tupload_trigger = true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tform_data.append('action', 'chumly_save_post');\r\n\t\t\r\n\t\tif (post_format) {\r\n\t\t\t\r\n\t\t\tform_data.append('post_format', post_format);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tform_data.append('target_user', chumly_vars.chumly_profile.id);\r\n\t\t\r\n\t\t$.ajax({\r\n\t\t\turl:         chumly_vars.ajax_url,\r\n\t\t\tprocessData: false,\r\n\t\t\tcontentType: false,\r\n\t\t\ttype:        'POST',\r\n\t\t\tcache:       false,\r\n\t\t\tdataType:    'json',\r\n\t\t\tdata:        form_data,\r\n\t\t\tsuccess:     function (data) {\r\n\t\t\t\t\r\n\t\t\t\t$('.news-feed--empty-prompt').remove();\r\n\t\t\t\t\r\n\t\t\t\tif (upload_trigger == true) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tchumlyUploadFiles(form, data.parent_post, data.post_type, data.post_format, function () {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tchumlyLoadFeedTemplate(data.parent_post, data.post_format, data.post_type);\r\n\t\t\t\t\t\t//$('.editor__feedback').empty();\r\n\t\t\t\t\t\t$(form).trigger('reset');\r\n\t\t\t\t\t\ttrigger.prop('disabled', 'disabled').text('Post Message');\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tchumlyLoadFeedTemplate(data.parent_post, data.post_format, data.post_type);\r\n\t\t\t\t\tform.trigger('reset');\r\n\t\t\t\t\t//$('.editor__feedback').empty();\r\n\t\t\t\t\ttrigger.prop('disabled', '').text('Post Message');\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t}\r\n\t\t\r\n}\r\n\r\n\r\nfunction chumlyShareStatusPost(event, trigger, form) {\r\n\t\r\n\tevent.preventDefault();\r\n\t\r\n\tvar form_data      = new FormData(form[0]),\r\n\t    upload_trigger = false,\r\n\t    modal          = trigger.parents('.modal__inner');\r\n\t//console.log(trigger);\r\n\ttrigger.prop('disabled', 'disabled').val('Sharing...').css('opacity', 0.6);\r\n\t\r\n\tvar target_user_id  = [],\r\n\t    target_selector = trigger.parents('.modal').find('select[name=\"target_select\"] option:selected').val(),\r\n\t    post_id         = $('.modal.is-active').find($('input[name=\"loaded_post_id\"]')).val();\r\n\t\r\n\tif (!isNaN(target_selector)) {\r\n\t\t\r\n\t\ttarget_user_id.push(target_selector);\r\n\t\t\r\n\t}\r\n\t\r\n\t$.each($(form).find('input[type=\"file\"]'), function (index, value) {\r\n\t\t\r\n\t\tif (value.files.length > 0) {\r\n\t\t\t\r\n\t\t\tform_data.append('has_files', true);\r\n\t\t\tpost_format    = 'image';\r\n\t\t\tupload_trigger = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t});\r\n\t\r\n\t$.each(modal.find('.form__group.is-active .search__output button').get(), function (index, value) {\r\n\t\t\r\n\t\t//console.log();\r\n\t\ttarget_user_id.push($(value).data('user_id'));\r\n\t\t\r\n\t});\r\n\t\r\n\tform_data.append('action', 'chumly_share_post');\r\n\tform_data.append('post_format', 'quote');\r\n\tform_data.append('target_id', target_user_id);\r\n\tform_data.append('source_profile_id', chumly_vars.chumly_profile.id);\r\n\tform_data.append('source_user_id', chumly_vars.user_id);\r\n\tform_data.append('shared_content_id', post_id);\r\n\tconsole.log(post_id);\r\n\t\r\n\t$.ajax({\r\n\t\turl:         chumly_vars.ajax_url,\r\n\t\tprocessData: false,\r\n\t\tcontentType: false,\r\n\t\ttype:        'POST',\r\n\t\tcache:       false,\r\n\t\tdataType:    'json',\r\n\t\tdata:        form_data,\r\n\t\tsuccess:     function (data) {\r\n\t\t\t\r\n\t\t\t//console.log('Return', data);\r\n\t\t\t\r\n\t\t\tform.trigger('reset');\r\n\t\t\ttrigger.prop('disabled', '').text('Share').css('opacity', 1);\r\n\t\t\t\r\n\t\t\t$(document).chumlyModal('close');\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n\t\r\n\t\r\n}","/**\r\n * Created by alex on 31/10/18.\r\n */\r\nvar scrollOff = function () {\r\n\t\r\n\tvar current = $(window).scrollTop();\r\n\t$(window).scroll(function() {\r\n\t\t$(window).scrollTop(current);\r\n\t});\r\n\t\r\n};\r\n\r\nvar scrollOn = function () {\r\n\t\r\n\t$(window).off('scroll');\r\n\t\r\n};\r\n","/**\r\n * Created by matthew on 8/2/18.\r\n */\r\n$.fn.chumlyScrollTo = function (callback) {\r\n\t\r\n\tvar elem = $(this),\r\n\t\telem_offset = elem.offset().top,\r\n\t\telem_height = elem.height(),\r\n\t\twindow_height = $(window).height(),\r\n\t\tdom = $('html, body'),\r\n\t\toffset = elem_offset - ((window_height / 2) - (elem_height / 2)) + 'px';\r\n\t\t\r\n\tdom.animate({\r\n\t\tscrollTop: offset\r\n\t}, 500, 'swing', function () {\r\n\t\t\r\n\t\tif (callback) {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t\t\r\n\t});\r\n\t\r\n};\r\n","/**\r\n * Created by matthew on 13/6/18.\r\n */\r\n// Search for users\r\n(function ($) {\r\n\t\r\n\t$.fn.chumlySearch = function () {\r\n\t\t\r\n\t\tvar elem = $(this),\r\n\t\t\tobject_id = elem.data('object_id'),\r\n\t\t\tsearch_form = elem.find('form'),\r\n\t\t\tsearch_input = elem.find('.search__form__input'),\r\n\t\t\tsearch_output = elem.find('.search__output'),\r\n\t\t\tsearch_results = elem.find('.search__results'),\r\n\t\t\tsearch_mask = elem.find('.search__mask');\r\n\t\t//console.log('Search Init', search_results);\r\n\t\tvar init = function () {\r\n\t\t\t\t\r\n\t\t\t\telem.on('keyup', function () {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar query_string = search_input.val(),\r\n\t\t\t\t\t\toutput = elem.attr('data-output');\r\n\t\t\t\t\t\r\n\t\t\t\t\t//console.log(query_string);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (query_string != '') {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsearch_mask.show();\r\n\t\t\t\t\t\tsearch_results.show();\r\n\t\t\t\t\t\t$.ajax({\r\n\t\t\t\t\t\t\turl: chumly_vars.ajax_url,\r\n\t\t\t\t\t\t\ttype: 'POST',\r\n\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\taction: 'chumly_search_members',\r\n\t\t\t\t\t\t\t\tquery: query_string,\r\n\t\t\t\t\t\t\t\tobject_id: object_id,\r\n\t\t\t\t\t\t\t\toutput_option: output\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tsuccess: function (data) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tsearch_results.html(data);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsearch_results.hide();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tsearch_mask.on('click', function (event) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tresetSearch();\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tsearch_results.on('click', '.list-view__item, .user-list__item', function (event) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar user_id = $(this).data('user_id'),\r\n\t\t\t\t\t\tsearch_result = $(this).find('.list-view__text__primary, .user-list__item__text span').html();\r\n\t\t\t\t\t\r\n\t\t\t\t\t//console.log('Result Loaded', search_result);\r\n\t\t\t\t\tresetSearch();\r\n\t\t\t\t\tsearch_input.focus();\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar svg = '<svg class=\"icon button__icon button__icon--right\" aria-hidden=\"true\">' +\r\n\t\t\t\t\t\t'<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"' + chumly_vars.plugin_url + '/frontend/images/icons/svg-symbols.svg#cross\"></use>' +\r\n\t\t\t\t\t\t'</svg>';\r\n\t\t\t\t\t//search_output.append('<input type=\"button\" class=\"button button-group__item button--small button--primary\" value=\"' + search_result + svg + '\">');\r\n\t\t\t\t\tsearch_output.append('<button type=\"button\" class=\"button button-group__item button--small button--primary\" data-user_id=\"' + user_id + '\"><p>' + search_result + '</p>' + svg + '</button>');\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\tsearch_output.on('click', '.button', function(){\r\n\t\t\t\t\t\r\n\t\t\t\t\t$(this).fadeOut('150', function(){\r\n\t\t\t\t\t\t$(this).remove();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\tsearch_form.on('submit', function(event){\r\n\t\t\t\t\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t$.each(search_output.find('button'), function(key, element){\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar user_id = $(element).data('user_id');\r\n\t\t\t\t\t\r\n\t\t\t\t\t//console.log(user_id);\r\n\t\t\t\t\t\r\n\t\t\t\t\t$.ajax({\r\n\t\t\t\t\t\turl: chumly_vars.ajax_url,\r\n\t\t\t\t\t\ttype: 'POST',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\taction: 'chumly_invite_group_member',\r\n\t\t\t\t\t\t\tuser_id: user_id,\r\n\t\t\t\t\t\t\tgroup_id: object_id\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsuccess: function(data){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tresetSearch();\r\n\t\t\t\t\t\t\tsearch_output.empty();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t//console.log('Submitted');\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tresetSearch = function () {\r\n\t\t\t\tsearch_input.val('');\r\n\t\t\t\tsearch_mask.hide();\r\n\t\t\t\tsearch_results.hide();\r\n\t\t\t};\r\n\t\t\r\n\t\tinit();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}(jQuery));\r\n\t\r\n","(function ($) {\r\n\r\n    $.fn.chumlyTabs = function () {\r\n\r\n        var elem = $(this),\r\n            triggers = elem.find('.chumly-tabs__trigger'),\r\n            targets = elem.find('.chumly-tabs__target'),\r\n            settings = {\r\n                activeClass: 'is-active',\r\n                singleToggle: false // When this is true, when a trigger is clicked when it's active, nothing will happen\r\n            };\r\n\r\n        var init = function () {\r\n\r\n            // Parse settings\r\n            settings = $.extend(true, {}, settings, elem.parseSettings());\r\n\r\n            if (triggers.any()) {\r\n\r\n                // Attach click to triggers\r\n                triggers.off('click').on('click', function (evt) {\r\n\r\n                    evt.preventDefault();\r\n\r\n                    // Load up the trigger, it's data, any related triggers and the target that we're looking for\r\n                    var trigger = $(this),\r\n                        targetID = (trigger.attr('href') ? trigger.attr('href') : '#' + trigger.attr('data-target')), // Load target id from href if link or data-target if button\r\n                        relatedtriggers = triggers.filter('[data-target=\"' + targetID + '\"],[href*=\"' + targetID + '\"]'),\r\n                        target = targets.filter(targetID);\r\n\r\n                    // If the target is there and this trigger is not active\r\n                    if (target.any() && !trigger.hasClass(settings.activeClass)) {\r\n\r\n                        // Clean up targets and add active class to targeted target\r\n                        targets.removeClass(settings.activeClass);\r\n                        target.addClass(settings.activeClass);\r\n\r\n                        // Clean up triggers and add active class to targeted trigger. Trigger a 'trigger_active' event for others modules to tap into.\r\n                        // Trigger a 'parent_active' for when a module lives within a hidden tab element that might need to be visual to work (like a google map)\r\n                        triggers.removeClass(settings.activeClass);\r\n                        trigger.addClass(settings.activeClass).trigger('trigger_active').trigger('parent_active');\r\n\r\n                        // Find triggers, if any add active class to them\r\n                        if (relatedtriggers.length > 0) {\r\n                            relatedtriggers.each(function () {\r\n                                $(this).addClass(settings.activeClass);\r\n                            });\r\n                        }\r\n\r\n                    }\r\n\r\n                    // If the target is there but the trigger is active and singleToggle is set to false\r\n                    else if ((target.any() && trigger.hasClass(settings.activeClass)) && !settings.singleToggle) {\r\n\r\n                        // Remove active class from target\r\n                        target.removeClass(settings.activeClass);\r\n\r\n                        // Remove active class from the trigger\r\n                        trigger.removeClass(settings.activeClass);\r\n\r\n                        // Find triggers, if any remove active class\r\n                        if (relatedtriggers.length > 0) {\r\n                            relatedtriggers.each(function () {\r\n                                $(this).removeClass(settings.activeClass);\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            $(window).on('hashchange', function() {\r\n                processUrl();\r\n            });\r\n        },\r\n\r\n        // Try and find a trigger based on hash. If trigger found run click method\r\n        processUrl = function () {\r\n\r\n            var hash = window.location.hash,\r\n                trigger = triggers.filter('[data-target=\"' + hash.replace('#', '') + '\"],[href=\"' + hash + '\"]');\r\n\r\n            if (trigger.length > 0) {\r\n\r\n                if (trigger.length > 1) {\r\n                    trigger = trigger.eq(0);\r\n                }\r\n\r\n                trigger.trigger('click');\r\n            }\r\n\r\n        };\r\n\r\n        // run methods\r\n        init();\r\n        processUrl();\r\n\r\n        return this;\r\n    };\r\n\r\n}(jQuery));\r\n","(function($) {\r\n\r\n\t$.fn.chumlyToggle = function() {\r\n\t\tvar elem = $(this),\r\n\t\t\ttargets = elem.find('.chumly-toggle__target'),\r\n\t\t\ttriggers = elem.find('.chumly-toggle__trigger'),\r\n\t\t\tsettings = {\r\n\t\t\t\tactiveClass: 'is-active',\r\n\t\t\t\tvisibleClass: 'is-active',\r\n\t\t\t\telemClass: '',\r\n\t\t\t\telemClassAttribute: 'data-elem-class'\r\n\t\t\t};\r\n\r\n\t\tvar init = function() {\r\n\t\t\t\r\n\t\t\t// Find elem class\r\n\t\t\tif(elem.attr(settings.elemClassAttribute)) {\r\n\t\t\t\tsettings.elemClass = elem.attr(settings.elemClassAttribute);\r\n\t\t\t}\r\n\r\n\t\t\t// Bind the click\r\n\t\t\ttriggers.off('click').on('click', function(evt) {\r\n\r\n\t\t\t\tevt.preventDefault();\r\n\r\n\t\t\t\t// Load trigger and target\r\n\t\t\t\tvar trigger = $(this),\r\n\t\t\t\t\ttarget = targets.filter(trigger.attr('href')),\r\n\t\t\t\t\trelatedTriggers = triggers.filter('[href=\"' + trigger.attr('href') + '\"]');\r\n\r\n\t\t\t\t\t// If there are multiple triggers targeting the same elem, just pass them all\r\n\t\t\t\t\t// to the toggle method for class toggling\r\n\t\t\t\t\tif(relatedTriggers.any()) {\r\n\t\t\t\t\t\ttrigger = relatedTriggers;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Toggle menu state accordingly\r\n\t\t\t\tif(trigger.hasClass(settings.activeClass)) {\r\n\t\t\t\t\ttoggle(trigger, target, 'off');\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttoggle(trigger, target, 'on');\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\ttoggle = function(trigger, target, state) {\r\n\r\n\t\t\tswitch(state) {\r\n\t\t\t\tcase 'off':\r\n\t\t\t\tdefault:\r\n\t\t\t\t\ttarget.removeClass(settings.visibleClass);\r\n\t\t\t\t\ttrigger.removeClass(settings.activeClass);\r\n\r\n\t\t\t\t\tif(settings.elemClass.length > 0) {\r\n\t\t\t\t\t\telem.removeClass(settings.elemClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'on':\r\n\t\t\t\t\ttarget.addClass(settings.visibleClass);\r\n\t\t\t\t\ttrigger.addClass(settings.activeClass);\r\n\r\n\t\t\t\t\tif(settings.elemClass.length > 0) {\r\n\t\t\t\t\t\telem.addClass(settings.elemClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tinit();\r\n\t\treturn this;\r\n\t};\r\n\r\n}(jQuery));","(function ($) {\r\n\t\r\n\t$.fn.chumlyUploadStatus = function () {\r\n\t\tvar elem              = $(this),\r\n\t\t    statusRing        = elem.find('.js-upload-status__status-ring').get(0),\r\n\t\t    bodyElem          = $('body'),\r\n\t\t    completeDashArray = 0,\r\n\t\t    settings          = {\r\n\t\t\t    completeClass: 'is-complete',\r\n\t\t\t    errorClass:    'is-error',\r\n\t\t\t    activeClass:   'is-active'\r\n\t\t    };\r\n\t\t\r\n\t\tvar init     = function () {\r\n\t\t\t\r\n\t\t\t    // Work out what our completed state will be\r\n\t\t\t    completeDashArray = parseFloat(statusRing.getAttribute('data-complete-dasharray'), 10);\r\n\t\t\t\r\n\t\t\t    // Bind triggers\r\n\t\t\t    bodyElem.on('chumly-upload-status-update-data', function (evt, data) {\r\n\t\t\t\t    update(data.percent);\r\n\t\t\t    });\r\n\t\t\t\r\n\t\t\t    bodyElem.on('chumly-upload-status-complete', complete);\r\n\t\t\t    bodyElem.on('chumly-upload-status-error', error);\r\n\t\t\t    bodyElem.on('chumly-upload-status-reset', function () {\r\n\t\t\t\t    reset(true);\r\n\t\t\t    });\r\n\t\t    },\r\n\t\t\r\n\t\t    update   = function (percent) {\r\n\r\n\t\t\t    elem.css('visibility', 'visible');\r\n\t\t\t\r\n\t\t\t    // Remove any classes\r\n\t\t\t    reset(false);\r\n\t\t\t\r\n\t\t\t    // Get the current percentage representation of the stroke dasharray\r\n\t\t\t    var currentVal = completeDashArray * percent;\r\n\t\t\t\r\n\t\t\t    // Find the difference between that and the complete value\r\n\t\t\t    var remainingVal = completeDashArray - currentVal;\r\n\t\t\t\r\n\t\t\t    // Set the attribute and increment the index\r\n\t\t\t    statusRing.setAttribute('stroke-dasharray', currentVal + ' ' + remainingVal);\r\n\t\t    },\r\n\t\t\r\n\t\t    // Show the upload has completed\r\n\t\t    complete = function () {\r\n\t\t\t    console.log('Completed Upload');\r\n\t\t\t    //If we're at the end, add the complete modifier\r\n\t\t\t    //if (percent >= 1) {\r\n\t\t\t    elem.addClass(settings.completeClass);\r\n\t\t\t    statusRing.setAttribute('stroke-dasharray', completeDashArray + ' 0');\r\n\t\t\t    //return;\r\n\t\t\t    //}\r\n\t\t    },\r\n\t\t\r\n\t\t    // Something has gone wrong so set a visual error\r\n\t\t    error    = function () {\r\n\t\t\t\r\n\t\t\t    elem.removeClass(settings.completeClass).addClass(settings.errorClass);\r\n\t\t\t    statusRing.setAttribute('stroke-dasharray', completeDashArray + ' 0');\r\n\t\t    },\r\n\t\t\r\n\t\t    // Reset to factory settings\r\n\t\t    reset    = function (resetStroke) {\r\n\t\t\t\r\n\t\t\t    elem.removeClass(settings.completeClass).removeClass(settings.errorClass);\r\n\t\t\t\r\n\t\t\t    if (resetStroke) {\r\n\t\t\t\t    statusRing.setAttribute('stroke-dasharray', '0 ' + completeDashArray);\r\n\t\t\t    }\r\n\t\t    };\r\n\t\t\r\n\t\tinit();\r\n\t\treturn this;\r\n\t};\r\n\t\r\n}($));","/**\r\n * IMAGE UPLOAD PREVIEW\r\n *\r\n * Trigger File Upload Image Preview\r\n */\r\nvar uploadPreview, hiddenFields, ajaxResponse;\r\n\r\n$('.chumly').on('change', 'input[data-upload=\"true\"]', function () {\r\n\r\n\tvar trigger = $(this),\r\n\t    target  = trigger.parents('form');\r\n\r\n\ttrigger.attr('data-new_file', 1);\r\n\r\n\tif (trigger.parents('.form__group').length > 0) {\r\n\r\n\t\tuploadPreview = trigger.parents('.form__group').find('.upload__preview');\r\n\r\n\t} else {\r\n\r\n\t\tuploadPreview = trigger.parents('form').find('.upload__preview');\r\n\r\n\t}\r\n\r\n\thiddenFields = target.find('.hidden_upload_fields');\r\n\tajaxResponse = target.find('.ajax_response');\r\n\r\n\tuploadPreview.empty();\r\n\thiddenFields.empty();\r\n\tajaxResponse.empty();\r\n\r\n\tvar files   = (this.files),\r\n\t    cropper = $(this).data('croppable');\r\n\r\n\tfor (var count = 0, file; file = files[count]; count++) {\r\n\r\n\t\tvar file_type = chumlyDetermineFiletype(file);\r\n\r\n\t\tif (file_type == 'image') {\r\n\r\n\t\t\t//var image = chumlyOrientateImage(file);\r\n\r\n\t\t\t//$('.user-profile__interactions').append(image);\r\n\r\n\t\t\tchumlyPreviewImageUpload(file, count, cropper);\r\n\r\n\t\t} else {\r\n\r\n\t\t\t//chumlyAlertModal(trigger, 'error', 'That file type is not permitted');\r\n\r\n\t\t\tchumlyPrompt(trigger, 'negative', 'Invalid Filetype', 'This type of file is not permitted for uploading.');\r\n\r\n\t\t\t/*uploadPreview.append('<div class=\"upload__preview__item\">' +\r\n\t\t\t\t'<img class=\"upload__preview__item__file\" src=\"' + chumly_vars.plugin_url + 'frontend/images/temp/file_icon.png\" data-filename=\"' + file['name'] + '\" />' +\r\n\t\t\t\t'<div class=\"upload__meter\"></div>' +\r\n\t\t\t\t'</div>');\r\n\t\t\t\r\n\t\t\t$.ajax({\r\n\t\t\t\turl:     chumly_vars.ajax_url,\r\n\t\t\t\ttype:    'GET',\r\n\t\t\t\tdata:    {\r\n\t\t\t\t\taction: 'chumly_upload_meter'\r\n\t\t\t\t},\r\n\t\t\t\tsuccess: function (data) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t$('.upload__meter').html(data);\r\n\t\t\t\t\tuploadPreview.find($('[data-module=\"chumly-upload-status\"]')).chumlyUploadStatus();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});*/\r\n\t\t}\r\n\r\n\t}\r\n\r\n});\r\n\r\n\r\n/**\r\n * IMAGE PREVIEW\r\n *\r\n * Grab the image(s) and output in the preview area.\r\n */\r\nfunction chumlyPreviewImageUpload(file, count, cropper) {\r\n\r\n\tvar fileReader = new FileReader();\r\n\r\n\tfileReader.onload = function (e) {\r\n\r\n\t\tvar imageString = e.target.result,\r\n\t\t    contentType = file['type'];\r\n\r\n\t\tvar imageBlob = chumlyImageStringBlob(imageString.split(',')[1], contentType);\r\n\r\n\r\n\t\tvar imageSrc = URL.createObjectURL(imageBlob);\r\n\t\t//var image = '<img id=\"image_' + count + '\" class=\"upload__preview__item__image\" src=\"' + imageSrc + '\" data-filename=\"' + file['name'] + '\"/>';\r\n\r\n\t\tuploadPreview.append('<div id=\"upload_preview_item_' + count + '\" class=\"upload__preview__item\">' +\r\n\t\t\t'<div class=\"upload__meter\" data-module=\"chumly-upload\"></div>' +\r\n\t\t\t'</div>'\r\n\t\t);\r\n\r\n\t\t//chumlyOrientateImage(file);\r\n\t\tchumlyOrientateImage(file, 'upload_preview_item_' + count, {\r\n\t\t\t'id': 'image_' + count,\r\n\t\t\t'class': 'upload__preview__item__image',\r\n\t\t\t'data-filename': file['name']\r\n\t\t});\r\n\r\n\t\tif (cropper) {\r\n\t\t\tchumlyFireImageCropper($('#image_' + count + ''), count);\r\n\t\t}\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: chumly_vars.ajax_url,\r\n\t\t\ttype: 'GET',\r\n\t\t\tdata: {\r\n\t\t\t\taction: 'chumly_upload_meter'\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\r\n\t\t\t\t$('.upload__meter').html(data);\r\n\t\t\t\tuploadPreview.find($('[data-module=\"chumly-upload-status\"]')).chumlyUploadStatus();\r\n\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t};\r\n\r\n\treturn fileReader.readAsDataURL(file);\r\n\r\n}\r\n\r\n\r\n/**\r\n * IMAGE ORIENTATION\r\n *\r\n * Determine what the EXIF orientation of the image is and\r\n * return relevant correction\r\n */\r\nfunction chumlyOrientateImage(file, outputTarget, imgAttrs) {\r\n\t\r\n\tloadImage(file, function (canvas) {\r\n\r\n\t\tvar image = new Image();\r\n\t\timage.src = canvas.toDataURL(\"image/png\");\r\n\r\n\t\t$('#' + outputTarget).prepend(image);\r\n\r\n\t\t$.each(imgAttrs, function (attrName, attrValue) {\r\n\r\n\t\t\t$(image).attr(attrName, attrValue);\r\n\r\n\t\t})\r\n\r\n\t}, {orientation: true});\r\n\r\n}\r\n\r\n\r\n/**\r\n * SAVE FILES\r\n *\r\n * Save posts from the Post Form such as the\r\n * status post form on the default profile page.\r\n *\r\n * @param form Form that contains the file inputs\r\n * @param parent_post For what entity the file is for. e.g - profile, status post, IM message, group profile, gallery etc.\r\n *                 This is used for saving metadata such as the URL and attachment ID to link to a profile.\r\n */\r\nfunction chumlyUploadFiles(form, parent_post, post_type, post_format, callback) {\r\n\tconsole.log('Upload Parent:', parent_post);\r\n\tif ($(form).find('input[type=\"file\"]').length == 0) {\r\n\r\n\t\tif (callback) {\r\n\t\t\tcallback();\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t$.each($(form).find('input[type=\"file\"]'), function (key, input) {\r\n\t\t\t//console.log($(input).attr('id'));\r\n\r\n\t\t\tvar media_classification = $(input).data('media_classification');\r\n\t\t\tconsole.log(media_classification);\r\n\r\n\t\t\tif (input.files.length < 1 || $(input).attr('data-new_file') != 1) {\r\n\t\t\t\tconsole.log('Skipping upload');\r\n\t\t\t\tif (callback) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t$.each(input.files, function (key, file) {\r\n\r\n\t\t\t\t\t//console.log(chumly_vars.user_id);\r\n\t\t\t\t\tvar fileType   = chumlyDetermineFiletype(file),\r\n\t\t\t\t\t    uploadData = new FormData();\r\n\r\n\t\t\t\t\tuploadData.append('action', 'chumly_save_file');\r\n\t\t\t\t\tuploadData.append('media_classification', media_classification);\r\n\t\t\t\t\tuploadData.append('term', media_classification + '-' + $(input).attr('id'));\r\n\t\t\t\t\tuploadData.append('user_id', chumly_vars.user_id);\r\n\t\t\t\t\tuploadData.append('media_bucket', chumly_vars.media_bucket);\r\n\t\t\t\t\tuploadData.append('parent_post', parent_post);\r\n\r\n\t\t\t\t\tvar xhr = new XMLHttpRequest();\r\n\t\t\t\t\tif (fileType == 'image') {\r\n\r\n\t\t\t\t\t\tif ($('.upload__preview__item__image--cropped').data('filename', file['name']).length > 0) {\r\n\r\n\t\t\t\t\t\t\tvar upload_source = $('.upload__preview__item__image--cropped[data-filename=\"' + file['name'] + '\"]').attr('src');\r\n\t\t\t\t\t\t\t//console.log('cropped image');\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar upload_source = $('.upload__preview__item__image[data-filename=\"' + file['name'] + '\"]').attr('src');\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\txhr.open('GET', upload_source, true);\r\n\t\t\t\t\t\txhr.responseType = 'blob';\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar upload_source = $('.upload__preview__item__file[data-filename=\"' + file['name'] + '\"]').attr('src');\r\n\t\t\t\t\t\t//console.log(upload_source);\r\n\t\t\t\t\t\txhr.open('GET', upload_source, true);\r\n\t\t\t\t\t\tuploadData.append('file', file);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\txhr.onload = function (e) {\r\n\r\n\t\t\t\t\t\tif (this.status == 400) {\r\n\t\t\t\t\t\t\tconsole.log('Error - Check with host.');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.status == 200) {\r\n\r\n\t\t\t\t\t\t\tvar imageBlob = this.response;\r\n\r\n\t\t\t\t\t\t\tif (fileType == 'image') {\r\n\r\n\t\t\t\t\t\t\t\tuploadData.append(0, imageBlob, file['name']);\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t$.ajax({\r\n\t\t\t\t\t\t\t\turl: chumly_vars.ajax_url,\r\n\t\t\t\t\t\t\t\ttype: 'POST',\r\n\t\t\t\t\t\t\t\tprocessData: false,\r\n\t\t\t\t\t\t\t\tcontentType: false,\r\n\t\t\t\t\t\t\t\tdataType: 'json',\r\n\t\t\t\t\t\t\t\tcache: false,\r\n\t\t\t\t\t\t\t\tdata: uploadData,\r\n\t\t\t\t\t\t\t\txhr: function () {\r\n\t\t\t\t\t\t\t\t\t//upload Progress\r\n\t\t\t\t\t\t\t\t\tvar xhr = $.ajaxSettings.xhr();\r\n\t\t\t\t\t\t\t\t\tif (xhr.upload) {\r\n\t\t\t\t\t\t\t\t\t\txhr.upload.addEventListener('progress', function (event) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tvar percent  = 0,\r\n\t\t\t\t\t\t\t\t\t\t\t    position = event.loaded || event.position,\r\n\t\t\t\t\t\t\t\t\t\t\t    total    = event.total;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (event.lengthComputable) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tpercent = Math.ceil(position / total).toFixed(2);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t//update upload meter\r\n\t\t\t\t\t\t\t\t\t\t\t$('body').trigger('chumly-upload-status-update-data', [{percent: percent}]);\r\n\t\t\t\t\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn xhr;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tsuccess: function (data) {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.log('Saved file response:', data);\r\n\r\n\t\t\t\t\t\t\t\t\tif (data.state == 'success') {\r\n\t\t\t\t\t\t\t\t\t\t//console.log($(input));\r\n\t\t\t\t\t\t\t\t\t\t$(input).attr('data-new_file', 0);\r\n\r\n\t\t\t\t\t\t\t\t\t\t$(input).trigger('chumly-upload-status-complete');\r\n\r\n\t\t\t\t\t\t\t\t\t} else if (data.state == 'error') {\r\n\t\t\t\t\t\t\t\t\t\t$('body').trigger('chumly-upload-status-error');\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tajaxResponse.append(data);\r\n\r\n\t\t\t\t\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\txhr.send(null);\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * FILE TYPE ROUTER\r\n *\r\n * Determine what type of file we're uploading\r\n * and decide what happens from there.\r\n */\r\nfunction chumlyDetermineFiletype(file) {\r\n\r\n\treturn file['type'].split('/')[0];\r\n\r\n}\r\n\r\n\r\n/**\r\n * LOAD IMAGE CROPPER\r\n *\r\n * Not all files and images uploaded will require or\r\n * want to be cropped so we'll only load the cropping\r\n * mechanism conditionally. From here will follow on\r\n * the necessary mechanism to save the cropped image.\r\n */\r\nfunction chumlyFireImageCropper(target, count) {\r\n\r\n\tajaxResponse.empty();\r\n\r\n\ttarget.rcrop({\r\n\t\tgrid: true,\r\n\t\tfull: true\r\n\t});\r\n\r\n\t//console.log(target.rcrop('getValues'));\r\n\r\n\ttarget.on('rcrop-ready rcrop-changed', function () {\r\n\r\n\t\tchumlyProcessCrop(target, count);\r\n\r\n\t});\r\n\r\n}\r\n\r\n\r\n/** GET CROPPED IMAGE DIMENSIONS & COORDINATES\r\n *\r\n * Get the coordinates for our new image.\r\n */\r\nfunction chumlyGetCropCoordinates(target) {\r\n\r\n\treturn target.rcrop('getValues');\r\n\r\n}\r\n\r\n\r\n/**\r\n * PROCESS CROPPED IMAGE\r\n */\r\nfunction chumlyProcessCrop(target, count) {\r\n\r\n\tvar image_data   = chumlyGetCropCoordinates(target),\r\n\t    image_source = target.rcrop('getDataURL');\r\n\r\n\t$.ajax({\r\n\t\turl: chumly_vars.ajax_url,\r\n\t\ttype: 'POST',\r\n\t\tdata: {\r\n\t\t\t'action': 'process_crop',\r\n\t\t\t'image_source': image_source,\r\n\t\t\t'image_id': count,\r\n\t\t\t'image_height': image_data.height,\r\n\t\t\t'image_width': image_data.width,\r\n\t\t\t'image_x_position': image_data.x,\r\n\t\t\t'image_y_position': image_data.y\r\n\t\t},\r\n\t\tsuccess: function (data) {\r\n\r\n\t\t\tvar image_string = data,\r\n\t\t\t    image_blob   = chumlyImageStringBlob(image_string, 'image/png'),\r\n\t\t\t    image_src    = URL.createObjectURL(image_blob);\r\n\r\n\t\t\t$('.upload__preview__item').find('.upload__preview__item__image--cropped').remove();\r\n\t\t\ttarget.parents('.upload__preview__item')\r\n\t\t\t\t.append('<img class=\"upload__preview__item__image upload__preview__item__image--cropped\" src=\"' + image_src + '\" data-filename=\"' + target.data('filename') + '\"/>');\r\n\r\n\t\t}\r\n\t}); // Close Ajax\r\n}\r\n\r\n\r\n/**\r\n * PREPARE UPLOAD OBJECTS\r\n *\r\n * We need to take the data we've input and prepare it\r\n * for being uploaded by getting our Ajax data objects\r\n * in the correct format as well as feed in any metadata\r\n * we'll need such as the page we're on.\r\n */\r\nfunction chumlyPrepareFileUpload(count) {\r\n\r\n\tvar files = $(document).find('#profile_image')[0].files,\r\n\t    data  = new FormData();\r\n\r\n\r\n\tfor (var count = 0, file; file = files[count]; count++) {\r\n\t\tdata.append('file_' + count, file);\r\n\t}\r\n\r\n\treturn data;\r\n\r\n}\r\n\r\n\r\n/**\r\n * CREATE IMAGES FROM STRINGS\r\n *\r\n * We want to have a uniform way of interacting with the images\r\n * we're outputting to preview and working with. As such, all images\r\n * become Blobs because we can easily draw new images and have a uniform\r\n * image object to save via media_handle_upload and such like - be it cropped,\r\n * rotated, rotated & cropped or just vanilla!\r\n *\r\n * @param image_string base64_encoded image source string from FileReader\r\n * @param content_type What kind of image it is\r\n * @param slice_size As it suggests - byte slice length\r\n * @returns {*} A Blob\r\n */\r\nfunction chumlyImageStringBlob(image_string, content_type, slice_size) {\r\n\r\n\tcontent_type = content_type || '';\r\n\tslice_size = slice_size || 512;\r\n\r\n\tvar byte_characters = atob(image_string),\r\n\t    byte_arrays     = [];\r\n\r\n\tfor (var offset = 0; offset < byte_characters.length; offset += slice_size) {\r\n\r\n\t\tvar slice        = byte_characters.slice(offset, offset + slice_size),\r\n\t\t    byte_numbers = new Array(slice.length);\r\n\r\n\t\tfor (var i = 0; i < slice.length; i++) {\r\n\t\t\tbyte_numbers[i] = slice.charCodeAt(i);\r\n\t\t}\r\n\r\n\t\tbyte_arrays.push(new Uint8Array(byte_numbers));\r\n\r\n\t}\r\n\r\n\treturn new Blob(byte_arrays, {type: content_type});\r\n\r\n}\r\n\t\r\n","/*------------------------------------*\\\r\n CHUMLY MASTER\r\n \r\n This file includes the module placeholders system that allows modular\r\n binding of custom methods / plugins etc.\r\n \r\n EXAMPLE\r\n \r\n <div data-module='example1,example2'></div>\r\n \r\n The above would meet two conditions in the below switch statement.\r\n \r\n \\*------------------------------------*/\r\nvar chumly = (function ($) {\r\n\t\r\n\t// This method will run when the DOM is ready. \r\n\tvar init = function () {\r\n\t\t\r\n\t\t// Find any module placeholders \r\n\t\tvar modulePlaceholders = $('[data-module]');\r\n\t\t\r\n\t\tif (modulePlaceholders.any()) {\r\n\t\t\t\r\n\t\t\t// Loop each placeholder\r\n\t\t\tmodulePlaceholders.each(function () {\r\n\t\t\t\t\r\n\t\t\t\tvar elem    = $(this),\r\n\t\t\t\t    modules = elem.attr('data-module');\r\n\t\t\t\t\r\n\t\t\t\t// If any modules found\t\r\n\t\t\t\tif (modules) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Split on the comma \r\n\t\t\t\t\tmodules = modules.split(', ');\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Loop each module key\r\n\t\t\t\t\t$.each(modules, function (i, module) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Run switch to bind each module to each key\r\n\t\t\t\t\t\tswitch (module) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcase 'chumly-alert':\r\n\t\t\t\t\t\t\t\telem.chumlyAlert();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcase 'chumly-prompt':\r\n\t\t\t\t\t\t\t\telem.chumlyPrompt();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcase 'chumly-tabs':\r\n\t\t\t\t\t\t\t\telem.chumlyTabs();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcase 'chumly-toggle':\r\n\t\t\t\t\t\t\t\telem.chumlyToggle();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcase 'chumly-upload-status':\r\n\t\t\t\t\t\t\t\telem.chumlyUploadStatus();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcase 'chumly-comment-form':\r\n\t\t\t\t\t\t\t\telem.chumlyCommentFormTriggers();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcase 'chumly-modal':\r\n\t\t\t\t\t\t\t\telem.chumlyModal();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcase 'chumly-search':\r\n\t\t\t\t\t\t\t\telem.chumlySearch();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcase 'chumly-notification':\r\n\t\t\t\t\t\t\t\telem.chumlyNotification();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcase 'chumly-connect':\r\n\t\t\t\t\t\t\t\telem.chumlyConnect();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t// Load always run scripts\r\n\t\tmisc();\r\n\t\t\r\n\t};\r\n\t\r\n\treturn {\r\n\t\tinit: init\r\n\t}\r\n\t\r\n}(window.$));\r\n\r\n// RUN!!\r\n\r\nif (jQuery('.chumly').length > 0) {\r\n\t\r\n\tchumly.init();\r\n\t\r\n}"]}