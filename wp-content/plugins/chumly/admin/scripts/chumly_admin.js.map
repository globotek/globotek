{"version":3,"sources":["_helpers.js","_input-fields.js","chumly_admin.js"],"names":[],"mappingshfile":"chumly_admin.js","sourcesContent":["(function($) {\r\n\t\r\n\t/*------------------------------------*\\\r\n\t    ANY\r\n\t    \r\n\t    This will return true if there are any items \r\n\t    in a jQuery collection. \r\n\t    \r\n\t    EXAMPLE\r\n\t    \r\n\t    var items = $(\".item\");\r\n\t    \r\n\t    if(items.any()) {\r\n\t\t\tconsole.log(\"YAY!\");\r\n\t\t}\r\n\t\\*------------------------------------*/\r\n\t\r\n\t$.fn.any = function() {\r\n\t\treturn $(this).length > 0;\r\n\t};\r\n\r\n\r\n    /*------------------------------------*\\\r\n        PARSE SETTINGS\r\n        \r\n        This will try and parse inline json settings as an object literal to pass into a plugin\r\n        \r\n        EXAMPLE\r\n        \r\n        <div class=\"item\" data-settings='{\"setting1\": true}'></div>\r\n\r\n        var item = $(\".item\"),\r\n            settings = item.parseSettings();\r\n        \r\n        console.log(settings.setting1);\r\n        \r\n        returns true;\r\n\r\n    \\*------------------------------------*/\r\n    $.fn.parseSettings = function () {\r\n\r\n        var elem = $(this),\r\n            response = {};\r\n\r\n        if (elem.attr(\"data-settings\")) {\r\n\r\n            try {\r\n                response = $.parseJSON(elem.attr(\"data-settings\"));\r\n            }\r\n            catch (ex) {\r\n                console.log(\"Check input data. Message: \" + ex.message);\r\n                return {};\r\n            }\r\n        }\r\n\r\n        return response;\r\n    };\r\n    \r\n\r\n    /*------------------------------------*\\\r\n        AJAX REQUEST\r\n        \r\n        A nice Ajax wrapper method\r\n        \r\n        EXAMPLE\r\n        \r\n        $.ajaxRequest({\r\n            url: \"/test\",\r\n            callback(function(data, isSuccess) {\r\n                \r\n                if(isSuccess) {\r\n                    alert('All the data is WINNING');\r\n                }\r\n            });\r\n        });\r\n\r\n    \\*------------------------------------*/\r\n\t$.extend({\r\n\t\tajaxRequest: function(options) {\r\n\t\t\t\r\n\t\t\tvar settings = {\r\n                dataType: \"application/json\",\r\n                url: \"/\",\r\n                data: {},\r\n                method: \"GET\",\r\n                callback: null\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar init = function() {\r\n\t\t\t\t\r\n\t\t\t\tsettings = $.extend(true, {}, settings, options);\r\n\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\tcontentType: settings.dataType, \r\n\t\t\t\t\turl: settings.url,\r\n\t\t\t\t\tdata: settings.data,\r\n\t\t\t\t\ttype: settings.method,\r\n\t\t\t\t\tsuccess: function(responseData) {\r\n\t\t\t\t\t\ttryCallback(responseData);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(responseData) {\r\n\t\t\t\t\t\ttryCallback(responseData);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\ttryCallback = function(responseData) {\r\n\t\t\t\t\r\n\t\t\t\tif(typeof(settings.callback) == \"function\") {\r\n\t\t\t\t\tsettings.callback(responseData, (responseData != null ? (responseData.status == 200 ? false : true) : true));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinit();\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n\r\n    /*------------------------------------*\\\r\n        AJAX HTML\r\n\r\n        A wrapper to ajaxRequest for simple HTML getting\r\n\r\n        EXAMPLE\r\n\r\n        $.ajaxHtml('http://google.com', function(data) {\r\n\t\t\t// do stuff\r\n\t\t});\r\n\r\n    \\*------------------------------------*/\r\n\t$.extend({\r\n\t\tajaxHtml: function(url, callback) {\r\n\t\t\t$.ajaxRequest({\r\n\t\t\t\tdataType: \"text/html\",\r\n\t\t\t\turl: url,\r\n\t\t\t\tcallback: callback\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\r\n    /*------------------------------------*\\\r\n        QUERY STRING\r\n\r\n        A helper to work with query strings\r\n\r\n        toJson: take the current query string and return it as json\r\n        fromJson: takes a json object and converts into a query string\r\n\r\n    \\*------------------------------------*/\r\n    $.extend({\r\n    \tqueryString: {\r\n\r\n    \t\ttoJson: function(ignoreKeys) {\r\n\t\t\t\tvar response = {},\r\n\t\t\t\t\tdata = window.location.href.toString().toLowerCase(),\r\n\t\t\t\t\tsplitData = [];\r\n\r\n\t\t\t\t// Return empty object if undefined\r\n\t\t\t\tif(typeof(data) == 'undefined') {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return empty object if empty\r\n\t\t\t\tif(data.length == 0) {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set empty array if ignore keys not set\r\n\t\t\t\tif(typeof(ignoreKeys) == 'undefined') {\r\n\t\t\t\t\tignoreKeys = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Split query string into array\r\n\t\t\t\tsplitData = data.split('?')[1].split('&');\r\n\r\n\t\t\t\t// Loop and create key value pairs\r\n\t\t\t\tfor (var i = 0, l = splitData.length; i < l; i++) {\r\n\t\t\t\t    var param = splitData[i].split('=');\r\n\t\t\t\t    response[param[0]] = param[1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check ignore keys length\r\n\t\t\t\tif(ignoreKeys.length > 0) {\r\n\r\n\t\t\t\t\t// Loop each one and delete if exists\r\n\t\t\t\t\t$.each(ignoreKeys, function(i, val) {\r\n\r\n\t\t\t\t\t\tif(response.hasOwnProperty(val)) {\r\n\t\t\t\t\t\t\tdelete response[val];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn response;\r\n    \t\t},\r\n\r\n    \t\tfromJson: function(data) {\r\n    \t\t\treturn '?' + $.param(data).replace('?', '&');\r\n    \t\t}\r\n    \t}\r\n    });\r\n\t\r\n\t\r\n    /*------------------------------------*\\\r\n        ESC\r\n        \r\n        A useful little wrapper for the escape key press event\r\n        \r\n        EXAMPLE\r\n        \r\n\t\t$.esc({\r\n\t\t\tcallback: function(evt) {\r\n\t\t\t\t\r\n\t\t\t\t// Close your modal or whatever. Accessibility FTW\r\n\t\t\t}\r\n\t\t});\r\n\r\n    \\*------------------------------------*/\r\n\t$.extend({\r\n\t\tesc: function(options) {\r\n\t\t\t\r\n\t\t\tvar settings = {\r\n\t\t\t\tcallback: null\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsettings = $.extend(true, {}, settings, options);\r\n\t\t\t\r\n\t\t\tif(typeof(settings.callback) == 'function') {\r\n\t\t\t\t\r\n\t\t\t\t$(document).keyup(function(evt) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// escape key maps to keycode `27`\r\n\t\t\t\t\tif (evt.keyCode == 27) { \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// run callback and pass the event over\r\n\t\t\t\t\t\tsettings.callback(evt);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\t\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t});\r\n\r\n\t/*------------------------------------*\\\r\n        GET BREAKPOINT\r\n\r\n\t\tReturns the current CSS breakpoint as defined in global.scss\r\n\t\\*------------------------------------*/\r\n\t$.extend({\r\n\t\tgetBreakpoint: function() {\r\n\t\t\treturn window.getComputedStyle(document.querySelector('body'), ':before').getPropertyValue('content').replace(/\\\"/g, '');\r\n\t\t}\r\n\t});\r\n\r\n    /*------------------------------------*\\\r\n        CHANGE EVENT\r\n\r\n        A helper to return the correct 'change' event for an element\r\n\r\n        EXAMPLE\r\n\r\n        var event = $('.item').changeEvent();\r\n\r\n    \\*------------------------------------*/\r\n    $.fn.changeEvent = function() {\r\n\r\n    \tvar elem = $(this),\r\n    \t\tresponse = 'change';\r\n\r\n\t\t\t// Work out what the change event will be, based on input type\r\n\t\t\tswitch(elem.prop('tagName').toString().toLowerCase()) {\r\n\t\t\t\tcase 'input':\r\n\r\n\t\t\t\t\tif(elem.attr('type') != 'checkbox' && elem.attr('type') != 'radio') {\r\n\t\t\t\t\t\tresponse = 'input';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\treturn response;\r\n    };\r\n}(jQuery));\r\n\r\n// TAKEN FROM David Walsh blog - http://davidwalsh.name/javascript-debounce-function\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nfunction debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this, args = arguments;\r\n\t\tvar later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tvar callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n};","jQuery(document).ready(function ($) {\r\n\r\n\t/** Set up tabs and set Profile as active on load */\r\n\t$('#tabs.chumly').tabs({\r\n\t\tactive: 3\r\n\t});\r\n\r\n\t/** Define selector for inputs form based on if tabs are in use */\r\n\tif ($('#tabs').length) {\r\n\t\tvar live_tab         = $('.ui-tabs-nav li.ui-state-active'),\r\n\t\t    current_location = live_tab.attr('aria-controls'),\r\n\t\t    live_form        = $('#' + current_location);\r\n\t} else {\r\n\t\tvar live_form        = $('form'),\r\n\t\t    current_location = $('form').attr('id');\r\n\t}\r\n\r\n\t/** When changing to another tab, redefine the live_form & current_location */\r\n\t$('#tabs').tabs({\r\n\t\tactivate: function (event, ui) {\r\n\t\t\tlive_tab = $('.ui-tabs-nav li.ui-state-active');\r\n\t\t\tcurrent_location = live_tab.attr('aria-controls');\r\n\t\t\tlive_form = $('#' + current_location);\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t/** Add drag and drop sorting to inputs rows */\r\n\t$('#profile ul, #registration ul, #new-user ul, #required ul, #groups ul').sortable({\r\n\t\thandle: '.input-column-order',\r\n\t\tcancel: '.row-content',\r\n\t\taxis: 'y',\r\n\t\tupdate: function () {\r\n\t\t\tupdate_order_count();\r\n\t\t}\r\n\t});\r\n\r\n\t$(\"#sortable\").disableSelection();\r\n\r\n\r\n\t/** Update order numbers on sort and delete of row */\r\n\tfunction update_order_count() {\r\n\t\tvar count       = 0,\r\n\t\t    inputs_list = $('#' + current_location + ' ul').children('li.fields-input:not(.delete)');\r\n\t\t//console.log(inputs_list);\r\n\r\n\t\tinputs_list.each(function () {\r\n\t\t\tcount++;\r\n\t\t\t//console.log(count);\r\n\t\t\t$(this).children('.input-column-order').html('<span class=\"circle\">' + count + '</span>');\r\n\t\t\t//$(this).attr('id', 'item_' + count);\r\n\t\t\t$(this).children('.input_order').val(count);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/** Toggle up and down action on inputs rows */\r\n\t$(document).on('click', '.input-column-name .row-title, .row-edit', function () {\r\n\t\tif ($(this).parents('.inputs-row').attr('data-active') == 'inactive') {\r\n\t\t\tvar row_content = $(this).parents('.inputs-row').find('.row-content');\r\n\t\t\t$(this).parents('.inputs-row').css('border-bottom', 'none').attr('data-active', 'active');\r\n\t\t\trow_content.animate({height: row_content.get(0).scrollHeight}, 200);\r\n\t\t} else {\r\n\t\t\t$(this).parents('.inputs-row').css('border-bottom', '1px solid #E5E5E5').attr('data-active', 'inactive');\r\n\t\t\t$(this).parents('.inputs-row').find('.row-content').animate({height: 0}, 200);\r\n\t\t}\r\n\t});\r\n\r\n\t$('.close_row').on('click', function () {\r\n\t\t$(this).parents('.inputs-row').css('border-bottom', '1px solid #E5E5E5');\r\n\t\t$(this).parents('.row-content').animate({height: 0}, 200);\r\n\t});\r\n\r\n\r\n\t/** On page load, get the respective row content */\r\n\t$('.fields-input').each(function () {\r\n\r\n\t\tvar input_location = $(this).parents('form').attr('id'),\r\n\t\t    row_id         = $(this).attr('id'),\r\n\t\t    input_type     = $(this).find('.input-type-select').find(':selected').val(),\r\n\t\t    ajax_function  = input_type + '_admin_markup',\r\n\t\t    input_data     = $(this).find('#stored_input_data').val().replace(/\\\\\"/g, '\"');\r\n\r\n\t\t//console.log(input_type);\r\n\r\n\t\tload_row_content(ajax_function, row_id, input_data, input_location, input_type);\r\n\r\n\t});\r\n\r\n\r\n\t/** Deactivate an input */\r\n\t$('form').on('click', '.row-active', function () {\r\n\t\tvar deac_input = $(this).parents('.inputs-row').find('#input_active');\r\n\r\n\t\tif (deac_input.val() == 1) {\r\n\t\t\tdeac_input.val(0);\r\n\t\t\t$(this).html('Activate');\r\n\t\t} else {\r\n\t\t\tdeac_input.val(1);\r\n\t\t\t$(this).html('Deactivate');\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t/** Save input fields */\r\n\t$('#save-fields').on('click', function () {\r\n\t\t$('.chumly.spinner').css('visibility', 'visible');\r\n\t\t$('.add-field-row, #save-fields').prop('disabled', 'disabled');\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: chumly_vars.ajax_url,\r\n\t\t\ttype: 'POST',\r\n\t\t\tdata: {\r\n\t\t\t\t'action': 'save_fields',\r\n\t\t\t\t'data': live_form.serialize().replace(/\\%5B/g, '[').replace(/\\%5D/g, ']')\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\t$('#ajax-response-fields').prepend('Saved Fields');\r\n\t\t\t\t$('#ajax-response-fields').html(data);\r\n\t\t\t\t$('.chumly.spinner').css('visibility', 'hidden');\r\n\t\t\t\t$('.add-field-row, #save-fields').removeProp('disabled', 'disabled');\r\n\r\n\t\t\t\t//location.reload();\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\r\n\t/** Create New Field */\r\n\t$('.add-field-row').on('click', function () {\r\n\r\n\t\t$('.add-field-row, #save-fields').prop('disabled', 'disabled');\r\n\r\n\t\tvar input_group          = live_form.find('#input_group').val(),\r\n\t\t    // location_field_count = live_form.find('#field_count').val(),\r\n\t\t    user_type            = live_form.find('#user_type').val(),\r\n\t\t    // location_index       = live_form.find('#location_index').val(),\r\n\t\t    inputs_index         = $('#inputs_index').val(),\r\n\t\t    // new_field_count      = (parseInt(location_field_count) + 1),\r\n\t\t    // new_location_index   = (parseInt(location_index) + 1),\r\n\t\t    new_inputs_index     = (parseInt(inputs_index) + 1);\r\n\r\n\t\tconsole.log('Inputs Index:', inputs_index);\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: chumly_vars.ajax_url,\r\n\t\t\ttype: 'POST',\r\n\t\t\tdata: {\r\n\t\t\t\t'action': 'load_new_field',\r\n\t\t\t\t'input_group': input_group,\r\n\t\t\t\t'input_location': current_location,\r\n\t\t\t\t// 'input_count': location_index,\r\n\t\t\t\t'inputs_index': new_inputs_index,\r\n\t\t\t\t'user_type': user_type\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\r\n\t\t\t\tlive_form.children('.inputs-list').append(data);\r\n\t\t\t\t// live_form.children('#field_count').val(new_field_count);\r\n\t\t\t\t// live_form.children('#location_index').val(new_location_index);\r\n\t\t\t\t$('#inputs_index').val(new_inputs_index);\r\n\r\n\t\t\t\tconsole.log('New Inputs Index:', new_inputs_index);\r\n\r\n\t\t\t\tupdate_order_count();\r\n\r\n\t\t\t\tload_row_content('text_admin_markup', 'item_' + new_inputs_index, '', current_location, 'text');\r\n\t\t\t\t$('.add-field-row, #save-fields').removeProp('disabled', 'disabled');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t});\r\n\r\n\r\n\t/** Remove inputs row */\r\n\t$('form').on('click', '.row-delete', function () {\r\n\r\n\t\t$(this).parents('.inputs-row').find('#input_delete').val(true);\r\n\r\n\t\t$(this).parents('.inputs-row').fadeOut('fast', function () {\r\n\r\n\t\t\t$(this).addClass('delete').find('.row-content').remove();\r\n\t\t\tupdate_order_count();\r\n\r\n\t\t});\r\n\r\n\t});\r\n\r\n\t/** Function that gets the respective input type's row content and loads it into the markup */\r\n\tfunction load_row_content(ajax_function, row_id, input_data, input_location, input_type) {\r\n\r\n\t\t$('.add-field-row, #save-fields').prop('disabled', 'disabled');\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: chumly_vars.ajax_url,\r\n\t\t\ttype: 'POST',\r\n\t\t\tdata: {\r\n\t\t\t\t'action': ajax_function,\r\n\t\t\t\t'row_id': row_id,\r\n\t\t\t\t'input_data': input_data,\r\n\t\t\t\t'input_location': input_location,\r\n\t\t\t\t'input_type': input_type,\r\n\t\t\t\t'input_group': $('#input_group').val()\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\t$('#' + input_location + ' #' + row_id + ' .input-column.input-type').html(input_type);\r\n\t\t\t\t$('#' + input_location + ' #' + row_id + ' .field-type-anchor').replaceWith(data);\r\n\r\n\t\t\t\t$('.row-loader').delay(1500).fadeOut('fast', function () {\r\n\t\t\t\t\t$('.input-row-actions').delay(1500).fadeIn('fast').addClass('active');\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$('.add-field-row, #save-fields').removeProp('disabled', 'disabled');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t};\r\n\r\n\r\n\t/** Auto fill field_name with formatted field_label */\r\n\t$(document).on('focusout', '.input.input-label', function () {\r\n\t\tvar label_value     = $(this).val(),\r\n\t\t    formatted_value = label_value.toLowerCase().replace(/\\s/g, '_').replace(/[^\\s\\w\\d]/g, '');\r\n\r\n\t\t$(this).parents('.inputs-row').find('.input-column-name .row-title').text(label_value);\r\n\t\t$(this).parents('.inputs-row').find('.input-column.input-name').text(formatted_value);\r\n\t\t$(this).parents('.row-content').find('.input-name').val(formatted_value);\r\n\r\n\t});\r\n\r\n\r\n\t/** Get respective row content when input changes */\r\n\t$(document).on('change', '.input-type-select', function () {\r\n\t\tconsole.log('Load New Content');\r\n\t\t$('.add-field-row, #save-fields').prop('disabled', 'disabled');\r\n\t\tvar row_id        = $(this).parents('.inputs-row').attr('id'),\r\n\t\t    input_type    = $(this).val(),\r\n\t\t    ajax_function = input_type + '_admin_markup';\r\n\r\n\t\tconsole.log(live_form);\r\n\t\tconsole.log($('.ui-tabs-nav li.ui-state-active').attr('aria-controls'));\r\n\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: chumly_vars.ajax_url,\r\n\t\t\ttype: 'POST',\r\n\t\t\tdata: {\r\n\t\t\t\t'action': ajax_function,\r\n\t\t\t\t'row_id': row_id\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\t$(live_form).find('#' + row_id + ' .input-data').remove();\r\n\t\t\t\t$(live_form).find('#' + row_id + ' .field-type-anchor').replaceWith(data);\r\n\t\t\t\t$(live_form).find('#' + row_id + ' .input-column.input-type').html(input_type);\r\n\r\n\t\t\t\tvar total_height = 0;\r\n\t\t\t\t$(live_form).find('#' + row_id + ' tr').each(function () {\r\n\t\t\t\t\ttotal_height += $(this).outerHeight();\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$(live_form).find('#' + row_id + ' .row-content').css('height', total_height + 'px');\r\n\t\t\t\t$('.add-field-row, #save-fields').removeProp('disabled', 'disabled');\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\r\n\r\n\t/*\r\n\t@TODO Comment the below function\r\n\t */\r\n\t$(document).on('change', '.funnel-select', function (event) {\r\n\r\n\t\tconsole.log('Funnel change', $(this));\r\n\r\n\t\tvar elem         = $(this),\r\n\t\t    funnelAction = $(this).data('funnel_action'),\r\n\t\t    funnelValue  = $(this).find('option:selected').val();\r\n\r\n\t\tconsole.log(funnelAction);\r\n\t\tconsole.log(funnelValue);\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: chumly_vars.ajax_url,\r\n\t\t\ttype: 'POST',\r\n\t\t\tdata: {\r\n\t\t\t\t'action': funnelAction,\r\n\t\t\t\t'funnelValue': funnelValue\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tconsole.log($(this));\r\n\t\t\t\tvar recipientElem = elem.siblings('.recipient-select');\r\n\r\n\t\t\t\tconsole.log(recipientElem, data);\r\n\t\t\t\trecipientElem.append(data);\r\n\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t});\r\n\r\n});","jQuery(document).ready(function ($) {\r\n\r\n\tif ($('.chumly').length > 0) {\r\n\r\n\t\t$('.openDrawer').click(function (e) {\r\n\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t//Expand or collapse this panel\r\n\t\t\t$(this).parents('tr').next().slideToggle(600);\r\n\r\n\t\t});\r\n\r\n\t\t$('.closeDrawer').click(function () {\r\n\r\n\t\t\t//Expand or collapse this panel\r\n\t\t\t$(this).parents('tr').slideToggle();\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n});"]}