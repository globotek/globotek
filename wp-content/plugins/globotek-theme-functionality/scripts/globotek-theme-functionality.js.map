{"version":3,"sources":["_helpers.js","freshsales-integration.js","app.js"],"names":[],"mappingshTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"globotek-theme-functionality.js","sourcesContent":["(function($) {\r\n\t\r\n\t/*------------------------------------*\\\r\n\t    ANY\r\n\t    \r\n\t    This will return true if there are any items \r\n\t    in a jQuery collection. \r\n\t    \r\n\t    EXAMPLE\r\n\t    \r\n\t    var items = $(\".item\");\r\n\t    \r\n\t    if(items.any()) {\r\n\t\t\tconsole.log(\"YAY!\");\r\n\t\t}\r\n\t\\*------------------------------------*/\r\n\t\r\n\t$.fn.any = function() {\r\n\t\treturn $(this).length > 0;\r\n\t}\r\n\r\n\r\n    /*------------------------------------*\\\r\n        PARSE SETTINGS\r\n        \r\n        This will try and parse inline json settings as an object literal to pass into a plugin\r\n        \r\n        EXAMPLE\r\n        \r\n        <div class=\"item\" data-settings='{\"setting1\": true}'></div>\r\n\r\n        var item = $(\".item\"),\r\n            settings = item.parseSettings();\r\n        \r\n        console.log(settings.setting1);\r\n        \r\n        returns true;\r\n\r\n    \\*------------------------------------*/\r\n    $.fn.parseSettings = function () {\r\n\r\n        var elem = $(this),\r\n            response = {};\r\n\r\n        if (elem.attr(\"data-settings\")) {\r\n\r\n            try {\r\n                response = $.parseJSON(elem.attr(\"data-settings\"));\r\n            }\r\n            catch (ex) {\r\n                $.log(\"Check input data. Message: \" + ex.message);\r\n                return {};\r\n            }\r\n        }\r\n\r\n        return response;\r\n    };\r\n    \r\n\r\n    /*------------------------------------*\\\r\n        AJAX REQUEST\r\n        \r\n        A nice Ajax wrapper method\r\n        \r\n        EXAMPLE\r\n        \r\n        $.ajaxRequest({\r\n            url: \"/test\",\r\n            callback(function(data, isSuccess) {\r\n                \r\n                if(isSuccess) {\r\n                    alert('All the data is WINNING');\r\n                }\r\n            });\r\n        });\r\n\r\n    \\*------------------------------------*/\r\n\t$.extend({\r\n\t\tajaxRequest: function(options) {\r\n\t\t\t\r\n\t\t\tvar settings = {\r\n                dataType: \"application/json\",\r\n                url: \"/\",\r\n                data: {},\r\n                method: \"GET\",\r\n                callback: null\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar init = function() {\r\n\t\t\t\t\r\n\t\t\t\tsettings = $.extend(true, {}, settings, options);\r\n\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\tcontentType: settings.dataType, \r\n\t\t\t\t\turl: settings.url,\r\n\t\t\t\t\tdata: settings.data,\r\n\t\t\t\t\ttype: settings.method,\r\n\t\t\t\t\tsuccess: function(responseData) {\r\n\t\t\t\t\t\ttryCallback(responseData);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(responseData) {\r\n\t\t\t\t\t\ttryCallback(responseData);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\ttryCallback = function(responseData) {\r\n\t\t\t\t\r\n\t\t\t\tif(typeof(settings.callback) == \"function\") {\r\n\t\t\t\t\tsettings.callback(responseData, (responseData != null ? (responseData.status == 200 ? false : true) : true));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinit();\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n\r\n    /*------------------------------------*\\\r\n        AJAX HTML\r\n\r\n        A wrapper to ajaxRequest for simple HTML getting\r\n\r\n        EXAMPLE\r\n\r\n        $.ajaxHtml('http://google.com', function(data) {\r\n\t\t\t// do stuff\r\n\t\t});\r\n\r\n    \\*------------------------------------*/\r\n\t$.extend({\r\n\t\tajaxHtml: function(url, callback) {\r\n\t\t\t$.ajaxRequest({\r\n\t\t\t\tdataType: \"text/html\",\r\n\t\t\t\turl: url,\r\n\t\t\t\tcallback: callback\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\r\n    /*------------------------------------*\\\r\n        QUERY STRING\r\n\r\n        A helper to work with query strings\r\n\r\n        toJson: take the current query string and return it as json\r\n        fromJson: takes a json object and converts into a query string\r\n\r\n    \\*------------------------------------*/\r\n    $.extend({\r\n    \tqueryString: {\r\n\r\n    \t\ttoJson: function(ignoreKeys) {\r\n\t\t\t\tvar response = {},\r\n\t\t\t\t\tdata = window.location.href.toString().toLowerCase(),\r\n\t\t\t\t\tsplitData = [];\r\n\r\n\t\t\t\t// Return empty object if undefined\r\n\t\t\t\tif(typeof(data) == 'undefined') {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return empty object if empty\r\n\t\t\t\tif(data.length == 0) {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set empty array if ignore keys not set\r\n\t\t\t\tif(typeof(ignoreKeys) == 'undefined') {\r\n\t\t\t\t\tignoreKeys = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Split query string into array\r\n\t\t\t\tsplitData = data.split('?')[1].split('&');\r\n\r\n\t\t\t\t// Loop and create key value pairs\r\n\t\t\t\tfor (var i = 0, l = splitData.length; i < l; i++) {\r\n\t\t\t\t    var param = splitData[i].split('=');\r\n\t\t\t\t    response[param[0]] = param[1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check ignore keys length\r\n\t\t\t\tif(ignoreKeys.length > 0) {\r\n\r\n\t\t\t\t\t// Loop each one and delete if exists\r\n\t\t\t\t\t$.each(ignoreKeys, function(i, val) {\r\n\r\n\t\t\t\t\t\tif(response.hasOwnProperty(val)) {\r\n\t\t\t\t\t\t\tdelete response[val];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn response;\r\n    \t\t},\r\n\r\n    \t\tfromJson: function(data) {\r\n    \t\t\treturn '?' + $.param(data).replace('?', '&');\r\n    \t\t}\r\n    \t}\r\n    });\r\n\t\r\n\t\r\n    /*------------------------------------*\\\r\n        ESC\r\n        \r\n        A useful little wrapper for the escape key press event\r\n        \r\n        EXAMPLE\r\n        \r\n\t\t$.esc({\r\n\t\t\tcallback: function(evt) {\r\n\t\t\t\t\r\n\t\t\t\t// Close your modal or whatever. Accessibility FTW\r\n\t\t\t}\r\n\t\t});\r\n\r\n    \\*------------------------------------*/\r\n\t$.extend({\r\n\t\tesc: function(options) {\r\n\t\t\t\r\n\t\t\tvar settings = {\r\n\t\t\t\tcallback: null\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsettings = $.extend(true, {}, settings, options);\r\n\t\t\t\r\n\t\t\tif(typeof(settings.callback) == 'function') {\r\n\t\t\t\t\r\n\t\t\t\t$(document).keyup(function(evt) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// escape key maps to keycode `27`\r\n\t\t\t\t\tif (evt.keyCode == 27) { \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// run callback and pass the event over\r\n\t\t\t\t\t\tsettings.callback(evt);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\t\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t});\r\n\r\n\t/*------------------------------------*\\\r\n        GET BREAKPOINT\r\n\r\n\t\tReturns the current CSS breakpoint as defined in global.scss\r\n\t\\*------------------------------------*/\r\n\t$.extend({\r\n\t\tgetBreakpoint: function() {\r\n\t\t\treturn window.getComputedStyle(document.querySelector('body'), ':before').getPropertyValue('content').replace(/\\\"/g, '');\r\n\t\t}\r\n\t});\r\n\r\n    /*------------------------------------*\\\r\n        CHANGE EVENT\r\n\r\n        A helper to return the correct 'change' event for an element\r\n\r\n        EXAMPLE\r\n\r\n        var event = $('.item').changeEvent();\r\n\r\n    \\*------------------------------------*/\r\n    $.fn.changeEvent = function() {\r\n\r\n    \tvar elem = $(this),\r\n    \t\tresponse = 'change';\r\n\r\n\t\t\t// Work out what the change event will be, based on input type\r\n\t\t\tswitch(elem.prop('tagName').toString().toLowerCase()) {\r\n\t\t\t\tcase 'input':\r\n\r\n\t\t\t\t\tif(elem.attr('type') != 'checkbox' && elem.attr('type') != 'radio') {\r\n\t\t\t\t\t\tresponse = 'input';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\treturn response;\r\n    };\r\n}(jQuery));\r\n\r\n// TAKEN FROM David Walsh blog - http://davidwalsh.name/javascript-debounce-function\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nfunction debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this, args = arguments;\r\n\t\tvar later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tvar callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n};","/**\r\n * Created by matthew on 2/4/19.\r\n */\r\n(function(){\r\n\t\r\n\t\r\n\t$.fn.freshSales = function(){\r\n\t\t\r\n\t\tvar init = function(){\r\n\t\t\t\r\n\t\t\tconsole.log('Freshsales Init');\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\tinit();\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n})(jQuery);","/*------------------------------------*\\\r\n    CENTRAL APP MASTER \r\n    \r\n    This file includes the module placeholders system that allows modular \r\n    binding of custom methods / plugins etc. \r\n    \r\n    EXAMPLE\r\n    \r\n    <div data-module=\"example1,example2\"></div> \r\n    \r\n    The above would meet two conditions in the below switch statement.\r\n    \r\n\\*------------------------------------*/\r\nvar app = (function($) {\r\n\t\r\n\t// This method will run when the DOM is ready. \r\n\tvar init = function() {\r\n\t\t\r\n\t\t// Find any module placeholders \r\n\t\tvar modulePlaceholders = $('[data-module]');\r\n\t\t\r\n\t\tif(modulePlaceholders.any()) {\r\n\t\t\t\r\n\t\t\t// Loop each placeholder\r\n\t\t\tmodulePlaceholders.each(function() {\r\n\t\t\t\t\r\n\t\t\t\tvar elem = $(this),\r\n\t\t\t\t\tmodules = elem.attr('data-module');\r\n\t\t\t\t\r\n\t\t\t\t// If any modules found\t\r\n\t\t\t\tif(modules) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Split on the comma \r\n\t\t\t\t\tmodules = modules.split(',');\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Loop each module key\r\n\t\t\t\t\t$.each(modules, function(i, module) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Run switch to bind each module to each key\r\n\t\t\t\t\t\tswitch(module) {\r\n\r\n\t\t\t\t\t\t\t// This is an example. Delete when you add your own cases.\r\n\t\t\t\t\t\t\tcase 'freshsales':\r\n\r\n\t\t\t\t\t\t\t\telem.freshSales();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Run the icons module if it exists and there are site icons\r\n\t\tif(typeof(site_icons) != 'undefined') {\r\n\r\n\t\t\tvar targets = $('[data-icon]');\r\n\r\n\t\t\tif(targets.any()) {\r\n\t\t\t\ttargets.each(function() {\r\n\t\t\t\t\t$(this).icon();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Delete this line. This is just for letting you know that everything is fine on first load.\r\n\t\tconsole.log('All is hunky dory in the functionality plugin!!!');\r\n\t};\r\n\t\r\n\treturn {\r\n\t\tinit: init\r\n\t}\r\n\t\r\n}(jQuery));\r\n\r\n// RUN!!\r\napp.init();"]}