{"version":3,"sources":["_helpers.js","_range-slider.js","_site-head.js","_toggle.js","app.js"],"names":[],"mappingshTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnfile":"app.js","sourcesContent":["(function($) {\n\t\n\t/*------------------------------------*\\\n\t    ANY\n\t    \n\t    This will return true if there are any items \n\t    in a jQuery collection. \n\t    \n\t    EXAMPLE\n\t    \n\t    var items = $(\".item\");\n\t    \n\t    if(items.any()) {\n\t\t\tconsole.log(\"YAY!\");\n\t\t}\n\t\\*------------------------------------*/\n\t\n\t$.fn.any = function() {\n\t\treturn $(this).length > 0;\n\t}\n\n\n    /*------------------------------------*\\\n        PARSE SETTINGS\n        \n        This will try and parse inline json settings as an object literal to pass into a plugin\n        \n        EXAMPLE\n        \n        <div class=\"item\" data-settings='{\"setting1\": true}'></div>\n\n        var item = $(\".item\"),\n            settings = item.parseSettings();\n        \n        console.log(settings.setting1);\n        \n        returns true;\n\n    \\*------------------------------------*/\n    $.fn.parseSettings = function () {\n\n        var elem = $(this),\n            response = {};\n\n        if (elem.attr(\"data-settings\")) {\n\n            try {\n                response = $.parseJSON(elem.attr(\"data-settings\"));\n            }\n            catch (ex) {\n                $.log(\"Check input data. Message: \" + ex.message);\n                return {};\n            }\n        }\n\n        return response;\n    };\n    \n\n    /*------------------------------------*\\\n        AJAX REQUEST\n        \n        A nice Ajax wrapper method\n        \n        EXAMPLE\n        \n        $.ajaxRequest({\n            url: \"/test\",\n            callback(function(data, isSuccess) {\n                \n                if(isSuccess) {\n                    alert('All the data is WINNING');\n                }\n            });\n        });\n\n    \\*------------------------------------*/\n\t$.extend({\n\t\tajaxRequest: function(options) {\n\t\t\t\n\t\t\tvar settings = {\n                dataType: \"application/json\",\n                url: \"/\",\n                data: {},\n                method: \"GET\",\n                callback: null\n\t\t\t};\n\t\t\t\n\t\t\tvar init = function() {\n\t\t\t\t\n\t\t\t\tsettings = $.extend(true, {}, settings, options);\n\n\t\t\t\t$.ajax({\n\t\t\t\t\tcontentType: settings.dataType, \n\t\t\t\t\turl: settings.url,\n\t\t\t\t\tdata: settings.data,\n\t\t\t\t\ttype: settings.method,\n\t\t\t\t\tsuccess: function(responseData) {\n\t\t\t\t\t\ttryCallback(responseData);\n\t\t\t\t\t},\n\t\t\t\t\terror: function(responseData) {\n\t\t\t\t\t\ttryCallback(responseData);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\ttryCallback = function(responseData) {\n\t\t\t\t\n\t\t\t\tif(typeof(settings.callback) == \"function\") {\n\t\t\t\t\tsettings.callback(responseData, (responseData != null ? (responseData.status == 200 ? false : true) : true));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tinit();\n\t\t\t\n\t\t}\n\t});\n\n    /*------------------------------------*\\\n        AJAX HTML\n\n        A wrapper to ajaxRequest for simple HTML getting\n\n        EXAMPLE\n\n        $.ajaxHtml('http://google.com', function(data) {\n\t\t\t// do stuff\n\t\t});\n\n    \\*------------------------------------*/\n\t$.extend({\n\t\tajaxHtml: function(url, callback) {\n\t\t\t$.ajaxRequest({\n\t\t\t\tdataType: \"text/html\",\n\t\t\t\turl: url,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t}\n\t});\n\n\n    /*------------------------------------*\\\n        QUERY STRING\n\n        A helper to work with query strings\n\n        toJson: take the current query string and return it as json\n        fromJson: takes a json object and converts into a query string\n\n    \\*------------------------------------*/\n    $.extend({\n    \tqueryString: {\n\n    \t\ttoJson: function(ignoreKeys) {\n\t\t\t\tvar response = {},\n\t\t\t\t\tdata = window.location.href.toString().toLowerCase(),\n\t\t\t\t\tsplitData = [];\n\n\t\t\t\t// Return empty object if undefined\n\t\t\t\tif(typeof(data) == 'undefined') {\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\n\t\t\t\t// Return empty object if empty\n\t\t\t\tif(data.length == 0) {\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\n\t\t\t\t// Set empty array if ignore keys not set\n\t\t\t\tif(typeof(ignoreKeys) == 'undefined') {\n\t\t\t\t\tignoreKeys = [];\n\t\t\t\t}\n\n\t\t\t\t// Split query string into array\n\t\t\t\tsplitData = data.split('?')[1].split('&');\n\n\t\t\t\t// Loop and create key value pairs\n\t\t\t\tfor (var i = 0, l = splitData.length; i < l; i++) {\n\t\t\t\t    var param = splitData[i].split('=');\n\t\t\t\t    response[param[0]] = param[1];\n\t\t\t\t}\n\n\t\t\t\t// Check ignore keys length\n\t\t\t\tif(ignoreKeys.length > 0) {\n\n\t\t\t\t\t// Loop each one and delete if exists\n\t\t\t\t\t$.each(ignoreKeys, function(i, val) {\n\n\t\t\t\t\t\tif(response.hasOwnProperty(val)) {\n\t\t\t\t\t\t\tdelete response[val];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\treturn response;\n    \t\t},\n\n    \t\tfromJson: function(data) {\n    \t\t\treturn '?' + $.param(data).replace('?', '&');\n    \t\t}\n    \t}\n    });\n\t\n\t\n    /*------------------------------------*\\\n        ESC\n        \n        A useful little wrapper for the escape key press event\n        \n        EXAMPLE\n        \n\t\t$.esc({\n\t\t\tcallback: function(evt) {\n\t\t\t\t\n\t\t\t\t// Close your modal or whatever. Accessibility FTW\n\t\t\t}\n\t\t});\n\n    \\*------------------------------------*/\n\t$.extend({\n\t\tesc: function(options) {\n\t\t\t\n\t\t\tvar settings = {\n\t\t\t\tcallback: null\n\t\t\t}\n\t\t\t\n\t\t\tsettings = $.extend(true, {}, settings, options);\n\t\t\t\n\t\t\tif(typeof(settings.callback) == 'function') {\n\t\t\t\t\n\t\t\t\t$(document).keyup(function(evt) {\n\t\t\t\t\t\n\t\t\t\t\t// escape key maps to keycode `27`\n\t\t\t\t\tif (evt.keyCode == 27) { \n\t\t\t\t\t\t\n\t\t\t\t\t\t// run callback and pass the event over\n\t\t\t\t\t\tsettings.callback(evt);\n\t\t\t\t\t}\n\t\t\t\t});\t\n\t\t\t}\n\n\t\t}\n\t});\n\n\t/*------------------------------------*\\\n        GET BREAKPOINT\n\n\t\tReturns the current CSS breakpoint as defined in global.scss\n\t\\*------------------------------------*/\n\t$.extend({\n\t\tgetBreakpoint: function() {\n\t\t\treturn window.getComputedStyle(document.querySelector('body'), ':before').getPropertyValue('content').replace(/\\\"/g, '');\n\t\t}\n\t});\n\n    /*------------------------------------*\\\n        CHANGE EVENT\n\n        A helper to return the correct 'change' event for an element\n\n        EXAMPLE\n\n        var event = $('.item').changeEvent();\n\n    \\*------------------------------------*/\n    $.fn.changeEvent = function() {\n\n    \tvar elem = $(this),\n    \t\tresponse = 'change';\n\n\t\t\t// Work out what the change event will be, based on input type\n\t\t\tswitch(elem.prop('tagName').toString().toLowerCase()) {\n\t\t\t\tcase 'input':\n\n\t\t\t\t\tif(elem.attr('type') != 'checkbox' && elem.attr('type') != 'radio') {\n\t\t\t\t\t\tresponse = 'input';\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\treturn response;\n    };\n}(jQuery));\n\n// TAKEN FROM David Walsh blog - http://davidwalsh.name/javascript-debounce-function\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nfunction debounce(func, wait, immediate) {\n\tvar timeout;\n\treturn function() {\n\t\tvar context = this, args = arguments;\n\t\tvar later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tvar callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n};","(function($) {\n\n\t$.fn.rangeSlider = function() {\n\t\tvar elem = $(this),\n\t\t    triggers = elem.find('.js-range__trigger'),\n\t\t    settings = {\n\t\t\t    activeClass: 'is-active',\n\t\t\t    visibleClass: 'is-active',\n\t\t\t    elemClass: '',\n\t\t\t    elemClassAttribute: 'data-elem-class'\n\t\t    };\n\n\t\tvar init = function() {\n            console.log('Slider');\n\n\n\t\t\t    triggers.off('input').on('input', function() {\n\n                    var control = $(this),\n                    controlMin = control.attr('min'),\n                    controlMax = control.attr('max'),\n                    controlVal = control.val(),\n                    controlThumbWidth = control.data('thumbwidth');\n\n                    var range = controlMax - controlMin;\n                \n                    var position = ((controlVal - controlMin) / range) * 100;\n                    var positionOffset = Math.round(controlThumbWidth * position / 100) - (controlThumbWidth / 2);\n                    var output = control.next('output');\n                \n                    output\n                        .css('left', 'calc(' + position + '% - ' + positionOffset + 'px - 51px)')\n                        .text('£' + controlVal);\n\n                    }).trigger(\"change\");\n\n\t\t    }\n\n\t\tinit();\n\t\treturn this;\n\t};\n\n}(jQuery));","(function($) {\n\n\t$.fn.siteHead = function() {\n\t\tvar elem = $(this),\n\t\t\tsettings = {\n\t\t\t\tactiveClass: 'is-active'\n\t\t\t};\n\n\t\tvar init = function() {\n            console.log('Head');\n\t\t\tsettings = $.extend(true, {}, settings, elem.parseSettings());\n\n\t\t\tvar navTrigger = $('.site-head .js-toggle__trigger'),\n\t\t\t\tnavElem = $('.site-head__nav');\n\n\t\t\tnavTrigger.on('click', function(){\n\n\t\t\t\tif(navElem.hasClass('is-active')){\n\t\t\t\t\tconsole.log('Active');\n\t\t\t\t\t$('body').addClass('is-locked');\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Not Active');\n\t\t\t\t\t$('body').removeClass('is-locked');\n\t\t\t\t}\n\n\t\t\t})\n\n\n\t\t\t// This is a stub module. Go ahead and delete it if you don't need it\n\t\t};\n\n\t\tinit();\n\t\treturn this;\n\t};\n\n}(jQuery));","(function($) {\n\n\t$.fn.toggle = function() {\n\t\tvar elem = $(this),\n\t\t    targets = elem.find('.js-toggle__target'),\n\t\t    triggers = elem.find('.js-toggle__trigger'),\n\t\t    settings = {\n\t\t\t    activeClass: 'is-active',\n\t\t\t    visibleClass: 'is-active',\n\t\t\t    elemClass: '',\n\t\t\t    elemClassAttribute: 'data-elem-class'\n\t\t    };\n\n\t\tvar init = function() {\n\n\t\t\t    // Find elem class\n\t\t\t    if(elem.attr(settings.elemClassAttribute)) {\n\t\t\t\t    settings.elemClass = elem.attr(settings.elemClassAttribute);\n\t\t\t    }\n\n\t\t\t    // Bind the click\n\t\t\t    triggers.off('click').on('click', function(evt) {\n\n\t\t\t\t    evt.preventDefault();\n\n\t\t\t\t    // Load trigger and target\n\t\t\t\t    var trigger = $(this),\n\t\t\t\t        target = targets.filter(trigger.attr('href')),\n\t\t\t\t        relatedTriggers = triggers.filter('[href=\"' + trigger.attr('href') + '\"]');\n\n\t\t\t\t    // If there are multiple triggers targeting the same elem, just pass them all\n\t\t\t\t    // to the toggle method for class toggling\n\t\t\t\t    if(relatedTriggers.any()) {\n\t\t\t\t\t    trigger = relatedTriggers;\n\t\t\t\t    }\n\n\t\t\t\t    // Toggle menu state accordingly\n\t\t\t\t    if(trigger.hasClass(settings.activeClass)) {\n\t\t\t\t\t    toggle(trigger, target, 'off');\n\t\t\t\t    }\n\t\t\t\t    else {\n\t\t\t\t\t    toggle(trigger, target, 'on');\n\t\t\t\t    }\n\n\t\t\t    });\n\t\t    },\n\n\t\t    toggle = function(trigger, target, state) {\n\n\t\t\t    switch(state) {\n\t\t\t\t    case 'off':\n\t\t\t\t    default:\n\t\t\t\t\t    target.removeClass(settings.visibleClass);\n\t\t\t\t\t    trigger.removeClass(settings.activeClass);\n\n\t\t\t\t\t    if(settings.elemClass.length > 0) {\n\t\t\t\t\t\t    elem.removeClass(settings.elemClass);\n\t\t\t\t\t    }\n\t\t\t\t\t    break;\n\t\t\t\t    case 'on':\n\t\t\t\t\t    target.addClass(settings.visibleClass);\n\t\t\t\t\t    trigger.addClass(settings.activeClass);\n\n\t\t\t\t\t    if(settings.elemClass.length > 0) {\n\t\t\t\t\t\t    elem.addClass(settings.elemClass);\n\t\t\t\t\t    }\n\t\t\t\t\t    break;\n\t\t\t    }\n\t\t    };\n\n\t\tinit();\n\t\treturn this;\n\t};\n\n}(jQuery));","/*------------------------------------*\\\n    CENTRAL APP MASTER \n    \n    This file includes the module placeholders system that allows modular \n    binding of custom methods / plugins etc. \n    \n    EXAMPLE\n    \n    <div data-module=\"example1,example2\"></div> \n    \n    The above would meet two conditions in the below switch statement.\n    \n\\*------------------------------------*/\nvar app = (function($) {\n\t\n\t// This method will run when the DOM is ready. \n\tvar init = function() {\n\t\t\n\t\t// Find any module placeholders \n\t\tvar modulePlaceholders = $('[data-module]');\n\t\t\n\t\tif(modulePlaceholders.any()) {\n\t\t\t\n\t\t\t// Loop each placeholder\n\t\t\tmodulePlaceholders.each(function() {\n\t\t\t\t\n\t\t\t\tvar elem = $(this),\n\t\t\t\t\tmodules = elem.attr('data-module');\n\t\t\t\t\n\t\t\t\t// If any modules found\t\n\t\t\t\tif(modules) {\n\t\t\t\t\t\n\t\t\t\t\t// Split on the comma \n\t\t\t\t\tmodules = modules.split(',');\n\t\t\t\t\t\n\t\t\t\t\t// Loop each module key\n\t\t\t\t\t$.each(modules, function(i, module) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Run switch to bind each module to each key\n\t\t\t\t\t\tswitch(module) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// This is an example. Delete when you add your own cases.\n\t\t\t\t\t\t\tcase 'site-head':\n\t\t\t\t\t\t\t\telem.siteHead();\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'toggle':\n\n\t\t\t\t\t\t\t\telem.toggle();\n\n\t\t\t\t\t\t\t\t// Run code here \n                                break;\n                                \n                            case 'range-slider':\n\n\t\t\t\t\t\t\t\telem.rangeSlider();\n\n\t\t\t\t\t\t\t\t// Run code here \n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Delete this line. This is just for letting you know that everything is fine on first load.\n\t\tconsole.log('Let\\'s Go!!!');\n\t};\n\t\n\treturn {\n\t\tinit: init\n\t}\n\t\n}(window.jQuery));\n\n// RUN!!\napp.init();"]}