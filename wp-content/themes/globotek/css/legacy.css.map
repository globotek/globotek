{"version":3,"sources":["legacy.css"],"names":[],"mappings":"iBA2MA,gBACE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,WAAA,sBAAA,OAAA,mBAAA,IAAA,eAAA,IACA,iBAAA,MAAA,cAAA,MAAA,gBAAA,WACA,cAAA,KAAA,UAAA,KACA,OAAA,MAAA,EAAA,EAAA,MACA,QAAA,EACA,gCACE,eAAA,OACA,WAAA,KACF,kBACE,QAAA,KAAA,EAAA,EAAA,KACA,kCACE,QAAA,aACA,eAAA,IACA,eAAA,OACA,aAAA,OA+CN,iBACE,MAAA,KAoFF,yCAIE,oCAAA,kCAAA,sBAAA,YACE,MAAA,MA0BJ,0CAOE,oCAAA,kCACE,MAAA,IAIF,sBACE,MAAA,QACF,yBACE,MAAA,QAOF,YACE,MAAA,KAcJ,gBAAA,cAAA,mBAAA,eAAA,eAAA,eAAA,aAAA,YAAA,gBACE,QAAA,MAQF,YAAA,2BAAA,oCACE,QAAA,YAAA,QAAA,YAAA,QAAA,KAEF,YAAA,oCACE,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OAEF,KACE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,SAAA,SACA,MAAA,KACA,SAAA,OACA,iBACE,MAAA,MACA,qBACE,MAAA,KACA,oCACE,qBACE,MAAA,OACA,UAAA,OACA,KAAA,IACA,kBAAA,iBAAA,UAAA,kBACR,YACE,SAAA,SACA,OAAA,KACA,MAAA,KACA,iBAAA,OAAA,cAAA,OAAA,gBAAA,OACA,kBAAA,OAAA,eAAA,OAAA,YAAA,OACA,qCACE,mBACE,MAAA,KACN,YACE,WAAA,OACA,SAAA,SACA,qCACE,YACE,IAAA,MACN,gBACE,iBAAA,QAAA,cAAA,QAAA,gBAAA,cACA,MAAA,OACA,UAAA,KACA,oCACE,gBACE,WAAA,KACA,WAAA,QACJ,yBACE,MAAA,KACA,gCACE,eAAA,KACF,+BACE,cAAA,KACA,oCACE,+BACE,cAAA,MACR,sBACE,oBAAA,OAAA,WAAA,OACA,cAAA,KACA,WAAA,MACA,oCACE,sBACE,WAAA,QACR,qBACE,MAAA,MACA,UAAA,KACA,2BACE,cAAA,WAAA,gBAAA,aACA,OAAA,KAAA,EACA,cAAA,KACA,WAAA,KACA,mBAAA,KAAA,EAAA,KAAA,EAAA,gBAAA,WAAA,KAAA,EAAA,KAAA,EAAA,gBACA,SAAA,OACA,oCACE,2BACE,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OACA,OAAA,KAAA,MACJ,oCACE,iBAAA,QAAA,cAAA,QAAA,gBAAA,cACA,QAAA,KACF,sCACE,WAAA,KACA,MAAA,KACJ,2BACE,WAAA,OACJ,mBACE,WAAA,OACA,oCACE,mBACE,WAAA,QACJ,yBACE,OAAA,KAAA,EACA,QAAA,KACA,cAAA,KACA,WAAA,KACA,mBAAA,KAAA,EAAA,KAAA,EAAA,gBAAA,WAAA,KAAA,EAAA,KAAA,EAAA,gBACA,oCACE,yBACE,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OACA,YAAA,KACA,aAAA,MAEV,YACE,QAAA,KAAA,EACA,UAAA,KAEF,YACE,QAAA,aACA,WAAA","file":"legacy.css","sourcesContent":["@charset \"UTF-8\";\n/*------------------------------------*\\\n    MODE TEMPLATE\n\n\n    This template can be used to create a new \n    mode. It builds the core framework and gives \n    access to all imports such as components.\n\\*------------------------------------*/\n/*------------------------------------*\\\n    IMPORT FRAMEWORK\n\\*------------------------------------*/\n/*â˜¹ Force @charset \"UTF-8\"; generation*/\n/*------------------------------------*\\\n    VARS\n\\*------------------------------------*/\n/*------------------------------------*\\\n    GENERIC\n\\*------------------------------------*/\n/*------------------------------------*\\\n    BREAKPOINTS\n\\*------------------------------------*/\n/*------------------------------------*\\\n    FONT-FACE DECLARATIONS\n\\*------------------------------------*/\n/*------------------------------------*\\\n    TYPOGRAPHY\n\\*------------------------------------*/\n/*------------------------------------*\\\n    MIXINS\n\\*------------------------------------*/\n/*------------------------------------*\\\n    BOUNCE SCROLL\n    \n    A little helper to get 'bouncy' scroll areas on iOS    \n\\*------------------------------------*/\n/*------------------------------------*\\\n    BUTTON\n    \n    Some useful base button styles.   \n\\*------------------------------------*/\n/*------------------------------------*\\\n    ELLIPSIS\n    \n    Especially useful for when you want text to truncate \n    gracefully in single line inline / inline-block elements  \n\\*------------------------------------*/\n/*------------------------------------*\\\n    FEATURE FAIL\n\n    Use this mixin to write fallback css for bleeding edge features.\n    Target modernizr classes for $feature.\n\n    E.G.\n\n    .test-element {\n        display: flex;\n\n        @include feauture-fail(\"no-flexbox\") {\n            display: table;\n        }\n    }\n}\n\\*------------------------------------*/\n/*------------------------------------*\\\n    FONT SIZE\n    \n    This mixin will generate a REM unit for your chosen font size. It will also add\n    the usual pixel unit for a fallback for browsers that don't support REMS. \n    \n    This can also caluculate a line height for you based on your base line-height ratio.\n    \n    You can append an !important too.\n    \n    You can override the base line-height ratio if needed too. \n    \n    Usage example: \n    \n    With line-height: \n    \n    body {\n    \n    \t@include font-size(16px, true);\n    }\n    \n    Without line-height: \n    \n    body {\n    \t\n    \t@include font-size(16px);\n    }\n    \n\\*------------------------------------*/\n/*------------------------------------*\\\n    FORM FIELD\n    \n    Some useful base form field styles.   \n\\*------------------------------------*/\n/*------------------------------------*\\\n    HOVER\n    \n    A useful little mixin to help generate better hover / focus etc. states.\n    This also has an 'include-active' flag which will help account for active states too.  \n\\*------------------------------------*/\n/*------------------------------------*\\\n    IE\n    \n    This mixin will help generate IE specific CSS. Add a version number as a parameter \n    and the mixin will do the rest!    \n\\*------------------------------------*/\n/*------------------------------------*\\\n    MEDIA QUERY\n\n    This mixin will wrap your code in the appropriate media query of your choosing.\n\n    For example. If you want to make the body background magenta on mobile only:\n\n    body {\n\t    @include media-query(palm) {\n\t    \tbackground: magenta;\n\t    }\n    }\n\\*------------------------------------*/\n/*------------------------------------*\\\n    MODE\n    \n    This simple mixin allows you to fence css into particular sections.\n    For example: you may have an admin area. The admin area uses the global\n    styles but also has its own. You'd create a new file in your 'project'\n    directory called 'admin.scss'. In there you would set '$mode: \"admin\"'. \n\n    Within your components etc. you would then do the following: \n\n    .a-css-class {\n    \t\n    \t// This stuff will only render in admin.css\n    \t@include mode(\"admin\") {\n\t\t\tbackground: red;\n    \t}\n    }\n\\*------------------------------------*/\n/*------------------------------------*\\\n    NO JS\n\n    A simple mixin that will allow consistent no JS related styles \n\\*------------------------------------*/\n/*------------------------------------*\\\n    PLACEHOLDER\n    \n    This little mixin will help style those pesky placeholders    \n\\*------------------------------------*/\n/*------------------------------------*\\\n    PRINT\n    \n    A very simply \"wrapper\" that allows you to add print specific styles within your css. \n    This is mainly in a mixin so that if anything changes in the future, we can just update this \n    mixin rather than refactoring our whole project.\n    \n    Usage example: \n    \n    body {\n    \tcolor: #f3f3f3;\n    \n\t\t@include print {\n\t\t\tcolor: #000000;\n\t\t}\n    }\n\\*------------------------------------*/\n/*------------------------------------*\\\n    SELECTION\n    \n    A useful little mixin for styling text selection.   \n\\*------------------------------------*/\n/*------------------------------------*\\\n    WORD WRAP\n    \n    Useful little mixin for breaking words. \n    Really useful for email links.\n\\*------------------------------------*/\n/*------------------------------------*\\\n    CORE\n\\*------------------------------------*/\n/**\n * Define your breakpoints. The first value is the prefix that shall be used for\n * your classes (e.g. `.palm--one-half`), the second value is the media query\n * that the breakpoint fires at.\n */\n/**\n * Define breakpoint keys for generation of keyword based sizes\n * such as %desk--one-third etc.\n */\n/*------------------------------------*\\\n    $MIXINS\n\\*------------------------------------*/\n/**\n * These mixins are for the library to use only, you should not need to modify\n * them at all.\n *\n * Enclose a block of code with a media query as named in `$breakpoints`.\n */\n/*------------------------------------*\\\n    GRID WRAPPER\n\\*------------------------------------*/\n.cta__universal {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  margin: -20px 0 0 -20px;\n  padding: 0; }\n  html.no-flexbox .cta__universal {\n    letter-spacing: -0.32em;\n    list-style: none; }\n  .cta__universal > * {\n    padding: 20px 0 0 20px; }\n    html.no-flexbox .cta__universal > * {\n      display: inline-block;\n      vertical-align: top;\n      letter-spacing: normal;\n      word-spacing: normal; }\n\n/*------------------------------------*\\\n    GRID ITEM\n\\*------------------------------------*/\n/**\n * Reversed grids allow you to structure your source in the opposite order to\n * how your rendered layout will appear. Extends `%grid`.\n */\n/**\n * Gutterless grids have all the properties of regular grids, minus any spacing.\n * Extends `%grid`.\n */\n/**\n * Align the entire grid to the right. Extends `%grid`.\n */\n/**\n * Centered grids align grid items centrally without needing to use push or pull\n * classes. Extends `%grid`.\n */\n/**\n * Align grid cells vertically (`%grid--middle` or `%grid--bottom` or `%grid--top`). Extends\n * `%grid`.\n */\n/**\n * Create grids with narrower gutters. Extends `%grid`.\n */\n/**\n * Create grids with wider gutters. Extends `%grid`.\n */\n/**\n * Level heights, requires an `inner` element to grow into it's parent. Extends `%grid`.\n * Modern only. LT IE 10 doesn't deserve level heights\n */\n/**\n * Put space between (ideally two) buttons so they stay away from each other.\n * Great alternative to floating right like the old days\n */\n/*------------------------------------*\\\n    $WIDTHS\n\\*------------------------------------*/\n/**\n * Create our width classes, prefixed by the specified namespace.\n */\n/**\n     * Whole\n     */\n.cta__background {\n  width: 100%; }\n\n/**\n     * Halves\n     */\n/**\n     * Thirds\n     */\n/**\n     * Quarters\n     */\n/**\n     * Fifths\n     */\n/**\n     * Sixths\n     */\n/**\n     * Eighths\n     */\n/**\n     * Tenths\n     */\n/**\n     * Twelfths\n     */\n@media only screen and (max-width: 683px) {\n  /**\n     * Whole\n     */\n  /**\n     * Halves\n     */\n  /**\n     * Thirds\n     */\n  /**\n     * Quarters\n     */\n  /**\n     * Fifths\n     */\n  /**\n     * Sixths\n     */\n  /**\n     * Eighths\n     */\n  /**\n     * Tenths\n     */\n  /**\n     * Twelfths\n     */ }\n\n@media only screen and (min-width: 684px) and (max-width: 999px) {\n  /**\n     * Whole\n     */\n  /**\n     * Halves\n     */\n  /**\n     * Thirds\n     */\n  /**\n     * Quarters\n     */\n  /**\n     * Fifths\n     */\n  /**\n     * Sixths\n     */\n  /**\n     * Eighths\n     */\n  /**\n     * Tenths\n     */\n  /**\n     * Twelfths\n     */ }\n\n@media only screen and (max-width: 999px) {\n  /**\n     * Whole\n     */\n  .cta__universal__link, .cta__portfolio-item__body__image, .cta__portfolio-item__body__content, .hero__text {\n    width: 100%; }\n  /**\n     * Halves\n     */\n  /**\n     * Thirds\n     */\n  /**\n     * Quarters\n     */\n  /**\n     * Fifths\n     */\n  /**\n     * Sixths\n     */\n  /**\n     * Eighths\n     */\n  /**\n     * Tenths\n     */\n  /**\n     * Twelfths\n     */ }\n\n@media only screen and (min-width: 1000px) {\n  /**\n     * Whole\n     */\n  /**\n     * Halves\n     */\n  .cta__portfolio-item__body__image, .cta__portfolio-item__body__content {\n    width: 50%; }\n  /**\n     * Thirds\n     */\n  .cta__universal__link {\n    width: 33.333%; }\n  .cta__universal__content {\n    width: 66.666%; }\n  /**\n     * Quarters\n     */\n  /**\n     * Fifths\n     */\n  .hero__text {\n    width: 80%; }\n  /**\n     * Sixths\n     */\n  /**\n     * Eighths\n     */\n  /**\n     * Tenths\n     */\n  /**\n     * Twelfths\n     */ }\n\n.lt-ie9 header, .lt-ie9 nav, .lt-ie9 article, .lt-ie9 section, .lt-ie9 aside, .lt-ie9 figure, .lt-ie9 figcaption, .lt-ie9 footer, .lt-ie9 main {\n  display: block; }\n\n/*------------------------------------*\\\n    DECLARATIONS\n\\*------------------------------------*/\n/*------------------------------------*\\\n    IMPORTS\n\\*------------------------------------*/\n.cta__inner, .cta__portfolio-item__body__content, .cta__portfolio-item__body {\n  display: flex; }\n\n.cta__inner, .cta__portfolio-item__body__content {\n  flex-direction: column; }\n\n.cta {\n  display: flex;\n  position: relative;\n  width: 100%;\n  overflow: hidden; }\n  .cta__background {\n    width: 100vw; }\n    .cta__background img {\n      width: 100%; }\n      @media screen and (max-width: 999px) {\n        .cta__background img {\n          width: 1500px;\n          max-width: 1500px;\n          left: 50%;\n          transform: translateX(-10%); } }\n  .cta__inner {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    justify-content: center;\n    align-items: center; }\n    @media screen and (min-width: 1000px) {\n      .cta__inner__image {\n        width: 75%; } }\n  .cta__title {\n    text-align: center;\n    position: relative; }\n    @media screen and (min-width: 1000px) {\n      .cta__title {\n        top: -10%; } }\n  .cta__universal {\n    justify-content: space-between;\n    width: 1160px;\n    max-width: 100%; }\n    @media screen and (max-width: 999px) {\n      .cta__universal {\n        margin-top: 20px;\n        text-align: center; } }\n    .cta__universal__content {\n      color: #FFFFFF; }\n      .cta__universal__content__title {\n        padding-bottom: 30px; }\n      .cta__universal__content__text {\n        margin-bottom: 60px; }\n        @media screen and (max-width: 999px) {\n          .cta__universal__content__text {\n            margin-bottom: 10px; } }\n    .cta__universal__link {\n      align-self: center;\n      margin-bottom: 60px;\n      text-align: right; }\n      @media screen and (max-width: 999px) {\n        .cta__universal__link {\n          text-align: center; } }\n  .cta__portfolio-item {\n    width: 980px;\n    max-width: 100%; }\n    .cta__portfolio-item__body {\n      justify-content: space-around;\n      margin: 40px 0;\n      border-radius: 10px;\n      background: #FFFFFF;\n      box-shadow: -5px 0px 10px 0 rgba(0, 0, 0, 0.09);\n      overflow: hidden; }\n      @media screen and (max-width: 999px) {\n        .cta__portfolio-item__body {\n          flex-direction: column;\n          margin: 40px 20px; } }\n      .cta__portfolio-item__body__content {\n        justify-content: space-between;\n        padding: 30px; }\n      .cta__portfolio-item__body__image img {\n        min-height: 100%;\n        width: auto; }\n    .cta__portfolio-item__link {\n      text-align: center; }\n  .cta__testimonials {\n    margin-top: -180px; }\n    @media screen and (max-width: 999px) {\n      .cta__testimonials {\n        margin-top: -250px; } }\n    .cta__testimonials__body {\n      margin: 60px 0;\n      padding: 30px;\n      border-radius: 10px;\n      background: #FFFFFF;\n      box-shadow: -5px 0px 10px 0 rgba(0, 0, 0, 0.09); }\n      @media screen and (max-width: 999px) {\n        .cta__testimonials__body {\n          flex-direction: column;\n          margin-left: 20px;\n          margin-right: 20px; } }\n\n.hero__text {\n  padding: 30px 0;\n  font-size: 18px; }\n\n.hero__link {\n  display: inline-block;\n  margin-top: 10px; }\n"]}